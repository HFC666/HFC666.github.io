<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>独自赏晴雨</title>
  
  
  <link href="https://www.hfcouc.work/atom.xml" rel="self"/>
  
  <link href="https://www.hfcouc.work/"/>
  <updated>2022-07-01T11:07:54.435Z</updated>
  <id>https://www.hfcouc.work/</id>
  
  <author>
    <name>Han Fangcheng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>书籍Thinking Julia前十章阅读笔记</title>
    <link href="https://www.hfcouc.work/2022/07/01/thinkjulia/"/>
    <id>https://www.hfcouc.work/2022/07/01/thinkjulia/</id>
    <published>2022-07-01T10:19:26.000Z</published>
    <updated>2022-07-01T11:07:54.435Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p align="center">    <img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimglf6.lf127.net%2Fimg%2FanBSb2NqdEc5dTlseXpNTWxpY0RWQ2NwUlAyVmFEa2lFSVo0TVM4WXNwSndDMUdvN3crMS9nPT0.jpg%3FimageView%26thumbnail%3D2160x0%26quality%3D90%26interlace%3D1%26type%3Djpg&refer=http%3A%2F%2Fimglf6.lf127.net&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1659263087&t=d2faeee051aa3c102a86e173d74306ad" style="zoom: 100%;" /></p><blockquote><p>书籍网址：<a href="https://benlauwens.github.io/ThinkJulia.jl/latest/book.html">https://benlauwens.github.io/ThinkJulia.jl/latest/book.html</a></p></blockquote><span id="more"></span><h2 id="The-Way-of-the-program"><a href="#The-Way-of-the-program" class="headerlink" title="The Way of the program"></a>The Way of the program</h2><h3 id="What-is-a-Program"><a href="#What-is-a-Program" class="headerlink" title="What is a Program?"></a>What is a Program?</h3><p>一个程序应该包括以下几部分：</p><ul><li>输入：从键盘、文件、网络或者其他设备中获取数据</li><li>输出：将数据展示在屏幕上、或将其存储在文件中、将其发送到网络上等等</li><li>数学：执行基本的数学运算，如加法乘法等</li><li>条件执行：查看特定的条件并且运行适当的代码</li><li>重复：重复地做一些动作，通常有一些变化</li></ul><h3 id="The-First-Program"><a href="#The-First-Program" class="headerlink" title="The First Program"></a>The First Program</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; println(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line">Hello, World!</span><br></pre></td></tr></table></figure><h3 id="Arithmetic-Operators"><a href="#Arithmetic-Operators" class="headerlink" title="Arithmetic Operators"></a>Arithmetic Operators</h3><p>符号<code>+</code>，<code>-</code>，<code>*</code>，<code>/</code>，<code>^</code>分别表示加法、减法、乘法、除法、幂运算。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; <span class="number">40</span> + <span class="number">2</span>         </span><br><span class="line"><span class="number">42</span>                    </span><br><span class="line">                      </span><br><span class="line">julia&gt; <span class="number">43</span> - <span class="number">1</span>         </span><br><span class="line"><span class="number">42</span>                    </span><br><span class="line">                      </span><br><span class="line">julia&gt; <span class="number">6</span> * <span class="number">7</span>          </span><br><span class="line"><span class="number">42</span>                    </span><br><span class="line">                      </span><br><span class="line">julia&gt; <span class="number">84</span> / <span class="number">2</span>         </span><br><span class="line"><span class="number">42.0</span>                  </span><br><span class="line">                      </span><br><span class="line">julia&gt; <span class="number">6</span> ^ <span class="number">2</span> + <span class="number">6</span>      </span><br><span class="line"><span class="number">42</span>                    </span><br></pre></td></tr></table></figure><blockquote><p>注意在除法中我们得到是$42.0$而不是$42$，后面我们会解释原因。</p></blockquote><h3 id="Values-and-Types"><a href="#Values-and-Types" class="headerlink" title="Values and Types"></a>Values and Types</h3><p>我们可以使用<code>typeof</code>函数来获取类型。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; typeof(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">Int64</span></span><br><span class="line"></span><br><span class="line">julia&gt; typeof(<span class="number">42.0</span>)</span><br><span class="line"><span class="built_in">Float64</span></span><br><span class="line"></span><br><span class="line">julia&gt; typeof(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line"><span class="built_in">String</span></span><br></pre></td></tr></table></figure><h2 id="Variables-Expressions-and-Statements"><a href="#Variables-Expressions-and-Statements" class="headerlink" title="Variables, Expressions and Statements"></a>Variables, Expressions and Statements</h2><h3 id="Assignment-Statements"><a href="#Assignment-Statements" class="headerlink" title="Assignment Statements"></a>Assignment Statements</h3><p>使用<code>=</code>对变量进行赋值。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; n = <span class="number">17</span></span><br><span class="line"><span class="number">17</span></span><br></pre></td></tr></table></figure><h3 id="Variable-Names"><a href="#Variable-Names" class="headerlink" title="Variable Names"></a>Variable Names</h3><p>命名可以采用字母、数字和<code>_</code>，但是数字不能在开头，也不能使用关键字。</p><p>下面为<code>Julia</code>的关键字：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract type</span>    <span class="keyword">baremodule</span>   <span class="keyword">begin</span>      <span class="keyword">break</span>       <span class="keyword">catch</span></span><br><span class="line"><span class="keyword">const</span>            <span class="keyword">continue</span>     <span class="keyword">do</span>         <span class="keyword">else</span>        <span class="keyword">elseif</span></span><br><span class="line"><span class="keyword">end</span>              <span class="keyword">export</span>       <span class="keyword">finally</span>    <span class="keyword">for</span>         <span class="keyword">function</span></span><br><span class="line"><span class="keyword">global</span>           <span class="keyword">if</span>           <span class="keyword">import</span>     importall   <span class="keyword">in</span></span><br><span class="line"><span class="keyword">let</span>              <span class="keyword">local</span>        <span class="keyword">macro</span>      <span class="keyword">module</span>      <span class="keyword">mutable struct</span></span><br><span class="line"><span class="keyword">primitive type</span>   <span class="keyword">quote</span>        <span class="keyword">return</span>     <span class="keyword">try</span>         <span class="keyword">using</span></span><br><span class="line"><span class="keyword">struct</span>           <span class="keyword">where</span>        <span class="keyword">while</span></span><br></pre></td></tr></table></figure><h3 id="Expressions-and-Statements"><a href="#Expressions-and-Statements" class="headerlink" title="Expressions and Statements"></a>Expressions and Statements</h3><p>表达式是值（values）、变量（variables）和符号（operators）的组合。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; <span class="number">42</span></span><br><span class="line"><span class="number">42</span></span><br><span class="line"></span><br><span class="line">julia&gt; n</span><br><span class="line"><span class="number">17</span></span><br><span class="line"></span><br><span class="line">julia&gt; n + <span class="number">25</span></span><br><span class="line"><span class="number">42</span></span><br></pre></td></tr></table></figure><p>语句是具有效果的代码单位，例如创建变量或显示值。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; n = <span class="number">17</span></span><br><span class="line"><span class="number">17</span></span><br><span class="line"></span><br><span class="line">julia&gt; println(n)</span><br><span class="line"><span class="number">17</span></span><br></pre></td></tr></table></figure><h3 id="Operator-Precedence"><a href="#Operator-Precedence" class="headerlink" title="Operator Precedence"></a>Operator Precedence</h3><p>括号优先级最高，其次是幂，之后是乘除法、加减法优先级最低。</p><h3 id="String-Operations"><a href="#String-Operations" class="headerlink" title="String Operations"></a>String Operations</h3><p><code>*</code>表示字符串拼接，<code>^</code>表示字符串重复。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; first_str = <span class="string">&quot;throat&quot;</span></span><br><span class="line"><span class="string">&quot;throat&quot;</span></span><br><span class="line"></span><br><span class="line">julia&gt; second_str = <span class="string">&quot;warbler&quot;</span></span><br><span class="line"><span class="string">&quot;warbler&quot;</span></span><br><span class="line"></span><br><span class="line">julia&gt; first_str * second_str</span><br><span class="line"><span class="string">&quot;throatwarbler&quot;</span></span><br><span class="line"></span><br><span class="line">julia&gt; <span class="string">&quot;Spam&quot;</span>^<span class="number">3</span></span><br><span class="line"><span class="string">&quot;SpamSpamSpam&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h3><p>注释用<code>#</code>。</p><h3 id="Debugging"><a href="#Debugging" class="headerlink" title="Debugging"></a>Debugging</h3><p><code>Julia</code>中存在三种错误。</p><ul><li>语法错误(Syntax error)：语法指的是程序的结构和关于该结构的规则。如括号少一边。</li><li>运行时错误(Runtime error)：指的是程序运行时出错，也被称为异常。</li><li>语义错误(Semantic error)：这种错误程序会运行，但是得到的结果不是我们想要的。</li></ul><h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><h3 id="Function-Calls"><a href="#Function-Calls" class="headerlink" title="Function Calls"></a>Function Calls</h3><p>我们之前已经看到一个函数调用的例子：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; println(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line">Hello, World!</span><br></pre></td></tr></table></figure><p><code>Println()</code>是函数的名字，括号里面是函数的参数。</p><p><code>Julia</code>提供一些类型转换的函数：</p><p><code>parse</code>函数将字符串类型转为任何数字(number)类型</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; parse(<span class="built_in">Int64</span>, <span class="string">&quot;32&quot;</span>)</span><br><span class="line"><span class="number">32</span></span><br><span class="line"></span><br><span class="line">julia&gt; parse(<span class="built_in">Float64</span>, <span class="string">&quot;3.14159&quot;</span>)</span><br><span class="line"><span class="number">3.14159</span></span><br><span class="line"></span><br><span class="line">julia&gt; parse(<span class="built_in">Int64</span>, <span class="string">&quot;Hello&quot;</span>)</span><br><span class="line">ERROR: <span class="built_in">ArgumentError</span>: invalid base <span class="number">10</span> digit <span class="string">&#x27;H&#x27;</span> <span class="keyword">in</span> <span class="string">&quot;Hello&quot;</span></span><br></pre></td></tr></table></figure><p><code>trunc</code>可以将字符串截断为整数：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; trunc(<span class="built_in">Int64</span>, <span class="number">3.9999</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line">julia&gt; trunc(<span class="built_in">Int64</span>, -<span class="number">2.3</span>)</span><br><span class="line">-<span class="number">2</span></span><br></pre></td></tr></table></figure><p><code>float</code>将整数转为浮点数：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; float(<span class="number">24</span>)</span><br><span class="line"><span class="number">24.0</span></span><br></pre></td></tr></table></figure><p><code>string</code>将参数转换为字符串：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; string(<span class="number">32</span>)</span><br><span class="line"><span class="string">&quot;32&quot;</span></span><br><span class="line"></span><br><span class="line">julia&gt; string(<span class="number">32.2</span>)</span><br><span class="line"><span class="string">&quot;32.2&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Adding-New-Functions"><a href="#Adding-New-Functions" class="headerlink" title="Adding New Functions"></a>Adding New Functions</h3><p>我们使用<code>function</code>定义函数，以<code>end</code>结束。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> printlyrics()</span><br><span class="line">    println(<span class="string">&quot;I&#x27;m a lumberjack, and I&#x27;m okay.&quot;</span>)</span><br><span class="line">    println(<span class="string">&quot;I sleep all night and I work all day.&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>我们也可以在函数中调用函数：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> repeatlyrics()</span><br><span class="line">    printlyrics()</span><br><span class="line">    printlyrics()</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p> 函数在运行前必须被定义。</p></blockquote><h3 id="Parameters-and-Arguments"><a href="#Parameters-and-Arguments" class="headerlink" title="Parameters and Arguments"></a>Parameters and Arguments</h3><p>下面我们定义一个含有参数的函数：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> printtwice(bruce)</span><br><span class="line">    println(bruce)</span><br><span class="line">    println(bruce)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>传入的参数可以是值(value)、表达式和变量。</p><h3 id="Variables-and-Parameters-Are-Local"><a href="#Variables-and-Parameters-Are-Local" class="headerlink" title="Variables and Parameters Are Local"></a>Variables and Parameters Are Local</h3><p>函数的变量和参数是局部的。</p><h3 id="Fruitful-Functions-and-Void-Functions"><a href="#Fruitful-Functions-and-Void-Functions" class="headerlink" title="Fruitful Functions and Void Functions"></a>Fruitful Functions and Void Functions</h3><p>有返回值的函数称为Fruitful Functions，没有返回值的函数称为Void Functions。没有返回值的函数的返回值为<code>nothing</code>，我们只能使用<code>show</code>函数打印。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; result = printtwice(<span class="string">&quot;Bing&quot;</span>)</span><br><span class="line">Bing</span><br><span class="line">Bing</span><br><span class="line">julia&gt; show(result)</span><br><span class="line"><span class="literal">nothing</span></span><br></pre></td></tr></table></figure><p><code>nothing</code>的类型为<code>Nothing</code>：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; typeof(<span class="literal">nothing</span>)</span><br><span class="line"><span class="built_in">Nothing</span></span><br></pre></td></tr></table></figure><h2 id="Case-Study-Interface-Design"><a href="#Case-Study-Interface-Design" class="headerlink" title="Case Study: Interface Design"></a>Case Study: Interface Design</h2><h3 id="Turtles"><a href="#Turtles" class="headerlink" title="Turtles"></a>Turtles</h3><p>我们使用下列命令下载所需要的包：</p><p>首先在<code>REPL</code>下按<code>]</code>键调出包管理：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(v1<span class="number">.0</span>) pkg&gt; add https://github.com/BenLauwens/ThinkJulia.jl</span><br></pre></td></tr></table></figure><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; <span class="keyword">using</span> ThinkJulia</span><br><span class="line"></span><br><span class="line">julia&gt; 🐢 = Turtle()</span><br><span class="line">Luxor.Turtle(<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="literal">true</span>, <span class="number">0.0</span>, (<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>))</span><br></pre></td></tr></table></figure><blockquote><p> 输入：<code>🐢</code> (<strong><code>\:turtle: TAB</code></strong>)。</p></blockquote><p>一旦创建了一个乌龟，可以调用函数来让他移动。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@svg</span> <span class="keyword">begin</span></span><br><span class="line">    forward(🐢, <span class="number">100</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><code>@svg</code>关键字运行一个绘制SVG图片的宏。宏是Julia的一个重要但高级的特性。</p><p>为了绘制直角，修改宏</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">🐢 = Turtle()</span><br><span class="line"><span class="meta">@svg</span> <span class="keyword">begin</span></span><br><span class="line">    forward(🐢, <span class="number">100</span>)</span><br><span class="line">    turn(🐢, -<span class="number">90</span>)</span><br><span class="line">    forward(🐢, <span class="number">100</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Simple-Repetition"><a href="#Simple-Repetition" class="headerlink" title="Simple Repetition"></a>Simple Repetition</h3><p>我们使用<code>for</code>循环来绘制一个正方形：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">🐢 = Turtle()</span><br><span class="line"><span class="meta">@svg</span> <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">4</span></span><br><span class="line">        forward(🐢, <span class="number">100</span>)</span><br><span class="line">        turn(🐢, -<span class="number">90</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="Conditionals-and-Recursion"><a href="#Conditionals-and-Recursion" class="headerlink" title="Conditionals and Recursion"></a>Conditionals and Recursion</h2><h3 id="Floor-Division-and-Modulus"><a href="#Floor-Division-and-Modulus" class="headerlink" title="Floor Division and Modulus"></a>Floor Division and Modulus</h3><p><code>floor division</code>符号<code>÷</code> (<strong><code>\div TAB</code></strong>)，两个数字相除后得到整数。取余符号<code>%</code>得到余数。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; minutes = <span class="number">105</span>            </span><br><span class="line"><span class="number">105</span>                             </span><br><span class="line">                                </span><br><span class="line">julia&gt; hours = minutes÷<span class="number">60</span>       </span><br><span class="line"><span class="number">1</span>                               </span><br><span class="line">                                </span><br><span class="line">julia&gt; remainder = minutes % <span class="number">60</span> </span><br><span class="line"><span class="number">45</span>                              </span><br></pre></td></tr></table></figure><h3 id="Boolean-Expressions"><a href="#Boolean-Expressions" class="headerlink" title="Boolean Expressions"></a>Boolean Expressions</h3><p>布尔表达式为结果为真或假的表达式。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x == y               <span class="comment"># x is equal to y</span></span><br><span class="line">x != y               <span class="comment"># x is not equal to y</span></span><br><span class="line">x ≠ y                <span class="comment"># (\ne TAB)</span></span><br><span class="line">x &gt; y                <span class="comment"># x is greater than y</span></span><br><span class="line">x &lt; y                <span class="comment"># x is less than y</span></span><br><span class="line">x &gt;= y               <span class="comment"># x is greater than or equal to y</span></span><br><span class="line">x ≥ y                <span class="comment"># (\ge TAB)</span></span><br><span class="line">x &lt;= y               <span class="comment"># x is less than or equal to y</span></span><br><span class="line">x ≤ y                <span class="comment"># (\le TAB)</span></span><br></pre></td></tr></table></figure><h3 id="Logical-Operators"><a href="#Logical-Operators" class="headerlink" title="Logical Operators"></a>Logical Operators</h3><p>与<code>&amp;&amp;</code></p><p>或<code>||</code></p><p>非<code>!</code></p><p>其中<code>&amp;&amp;</code>的优先级高于<code>||</code>。</p><h3 id="Conditional-Execution"><a href="#Conditional-Execution" class="headerlink" title="Conditional Execution"></a>Conditional Execution</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x &gt; <span class="number">0</span></span><br><span class="line">    println(<span class="string">&quot;x is positive&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Alternative-Execution"><a href="#Alternative-Execution" class="headerlink" title="Alternative Execution"></a>Alternative Execution</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span></span><br><span class="line">    println(<span class="string">&quot;x is even&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    println(<span class="string">&quot;x is odd&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Chained-Conditionals"><a href="#Chained-Conditionals" class="headerlink" title="Chained Conditionals"></a>Chained Conditionals</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x &lt; y</span><br><span class="line">    println(<span class="string">&quot;x is less than y&quot;</span>)</span><br><span class="line"><span class="keyword">elseif</span> x &gt; y</span><br><span class="line">    println(<span class="string">&quot;x is greater than y&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    println(<span class="string">&quot;x and y are equal&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Nested-Conditionals"><a href="#Nested-Conditionals" class="headerlink" title="Nested Conditionals"></a>Nested Conditionals</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x == y</span><br><span class="line">    println(<span class="string">&quot;x and y are equal&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> x &lt; y</span><br><span class="line">        println(<span class="string">&quot;x is less than y&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        println(<span class="string">&quot;x is greater than y&quot;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span> &lt; x &lt; <span class="number">10</span></span><br><span class="line">    println(<span class="string">&quot;x is a positive single-digit number.&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Recursion"><a href="#Recursion" class="headerlink" title="Recursion"></a>Recursion</h3><p>函数自己调用自己被称为递归。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> printn(s, n)</span><br><span class="line">    <span class="keyword">if</span> n ≤ <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    println(s)</span><br><span class="line">    printn(s, n-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Keyboard-Input"><a href="#Keyboard-Input" class="headerlink" title="Keyboard Input"></a>Keyboard Input</h3><p><code>Julia</code>提供内建函数<code>readline</code>来停止程序来等待用户输入一些东西，当用户键入<code>RETURN</code>或<code>ENTERN</code>时程序继续运行，<code>readline</code>以字符串的形式返回用户输入的内容。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; text = readline()</span><br><span class="line">What are you waiting <span class="keyword">for</span>?</span><br><span class="line"><span class="string">&quot;What are you waiting for?&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Fruitful-Functions"><a href="#Fruitful-Functions" class="headerlink" title="Fruitful Functions"></a>Fruitful Functions</h2><h3 id="Return-Values"><a href="#Return-Values" class="headerlink" title="Return Values"></a>Return Values</h3><p>函数具有返回值：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> area(radius)</span><br><span class="line">    a = <span class="literal">π</span> * radius^<span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>我们也可以省略<code>return</code>，默认最后一行为函数的返回值：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> area(radius)</span><br><span class="line">    <span class="literal">π</span> * radius^<span class="number">2</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Checking-Types"><a href="#Checking-Types" class="headerlink" title="Checking Types"></a>Checking Types</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> fact(n)</span><br><span class="line">    <span class="keyword">if</span> !(n <span class="keyword">isa</span> <span class="built_in">Int64</span>)</span><br><span class="line">        error(<span class="string">&quot;Factorial is only defined for integers.&quot;</span>)</span><br><span class="line">    <span class="keyword">elseif</span> n &lt; <span class="number">0</span></span><br><span class="line">        error(<span class="string">&quot;Factorial is not defined for negative integers.&quot;</span>)</span><br><span class="line">    <span class="keyword">elseif</span> n == <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> n * fact(n-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="Iteration"><a href="#Iteration" class="headerlink" title="Iteration"></a>Iteration</h2><h3 id="The-while-Statement"><a href="#The-while-Statement" class="headerlink" title="The while Statement"></a>The <code>while</code> Statement</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> countdown(n)</span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span></span><br><span class="line">        print(n, <span class="string">&quot; &quot;</span>)</span><br><span class="line">        n = n - <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    println(<span class="string">&quot;Blastoff!&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="break"><a href="#break" class="headerlink" title="break"></a>break</h4><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line">    print(<span class="string">&quot;&gt; &quot;</span>)</span><br><span class="line">    line = readline()</span><br><span class="line">    <span class="keyword">if</span> line == <span class="string">&quot;done&quot;</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    println(line)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">println(<span class="string">&quot;Done!&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h4><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">0</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    print(i, <span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h2><h3 id="Characters"><a href="#Characters" class="headerlink" title="Characters"></a>Characters</h3><p>一个字符用单引号<code>&#39;&#39;</code>包裹：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; <span class="string">&#x27;x&#x27;</span></span><br><span class="line"><span class="string">&#x27;x&#x27;</span>: ASCII/Unicode U+<span class="number">0078</span> (category Ll: Letter, lowercase)</span><br><span class="line">julia&gt; &#x27;🍌&#x27;</span><br><span class="line">&#x27;🍌&#x27;: Unicode U+<span class="number">01f34</span>c (category So: <span class="built_in">Symbol</span>, other)</span><br><span class="line">julia&gt; typeof(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"><span class="built_in">Char</span></span><br></pre></td></tr></table></figure><h3 id="A-String-Is-a-Sequence"><a href="#A-String-Is-a-Sequence" class="headerlink" title="A String Is a Sequence"></a>A String Is a Sequence</h3><p>我们可以对字符串进行索引：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; fruit = <span class="string">&quot;banana&quot;</span></span><br><span class="line"><span class="string">&quot;banana&quot;</span></span><br><span class="line">julia&gt; letter = fruit[<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;b&#x27;</span>: ASCII/Unicode U+<span class="number">0062</span> (category Ll: Letter, lowercase)</span><br><span class="line">julia&gt; fruit[<span class="keyword">end</span>]</span><br><span class="line"><span class="string">&#x27;a&#x27;</span>: ASCII/Unicode U+<span class="number">0061</span> (category Ll: Letter, lowercase)</span><br></pre></td></tr></table></figure><h3 id="length"><a href="#length" class="headerlink" title="length"></a><code>length</code></h3><p><code>length</code>返回字符串的长度：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; fruits = <span class="string">&quot;🍌 🍎 🍐&quot;</span></span><br><span class="line"><span class="string">&quot;🍌 🍎 🍐&quot;</span></span><br><span class="line">julia&gt; len = length(fruits)</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p>字符串是使用<code>UTF-8</code>进行编码的。<code>UTF-8</code>是一个可变宽度的编码，这意味着并非所有字符均以相同数量的字节编码。因此我们索引可能会出错。</p><p>函数<code>sizeof</code>可以给出字符串的字节数：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; sizeof(<span class="string">&quot;🍌&quot;</span>)</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><p>这意味着<code>UTF-8</code>编码的字符串中的字节索引并不是并不总是一个字符的合理的索引：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; fruits[<span class="number">2</span>]</span><br><span class="line">ERROR: <span class="built_in">StringIndexError</span>(<span class="string">&quot;🍌 🍎 🍐&quot;</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="Traversal"><a href="#Traversal" class="headerlink" title="Traversal"></a>Traversal</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">index = firstindex(fruits)</span><br><span class="line"><span class="keyword">while</span> index &lt;= sizeof(fruits)</span><br><span class="line">    letter = fruits[index]</span><br><span class="line">    println(letter)</span><br><span class="line">    <span class="keyword">global</span> index = nextind(fruits, index)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><code>nextind</code>返回下一个合理的索引；<code>prevind</code>查找前一个合理的索引。</p><h3 id="String-Slices"><a href="#String-Slices" class="headerlink" title="String Slices"></a>String Slices</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; str = <span class="string">&quot;Julius Caesar&quot;</span>;</span><br><span class="line"></span><br><span class="line">julia&gt; str[<span class="number">1</span>:<span class="number">6</span>]</span><br><span class="line"><span class="string">&quot;Julius&quot;</span></span><br><span class="line">julia&gt; str[:]</span><br><span class="line"><span class="string">&quot;Julius Caesar&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Strings-Are-Immutable"><a href="#Strings-Are-Immutable" class="headerlink" title="Strings Are Immutable"></a>Strings Are Immutable</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; greeting = <span class="string">&quot;Hello, world!&quot;</span></span><br><span class="line"><span class="string">&quot;Hello, world!&quot;</span></span><br><span class="line">julia&gt; greeting[<span class="number">1</span>] = <span class="string">&#x27;J&#x27;</span></span><br><span class="line">ERROR: <span class="built_in">MethodError</span>: no method matching setindex!(::<span class="built_in">String</span>, ::<span class="built_in">Char</span>, ::<span class="built_in">Int64</span>)</span><br></pre></td></tr></table></figure><h3 id="String-Interpolation"><a href="#String-Interpolation" class="headerlink" title="String Interpolation"></a>String Interpolation</h3><p>使用符号<code>$</code>可以将表达式的值插入到字符串中：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; greet = <span class="string">&quot;Hello&quot;</span>  </span><br><span class="line"><span class="string">&quot;Hello&quot;</span>                 </span><br><span class="line">                        </span><br><span class="line">julia&gt; whom = <span class="string">&quot;World&quot;</span>   </span><br><span class="line"><span class="string">&quot;World&quot;</span>                 </span><br><span class="line"></span><br><span class="line">julia&gt; <span class="string">&quot;<span class="subst">$(greet)</span>, <span class="subst">$(whom)</span>!&quot;</span></span><br><span class="line"><span class="string">&quot;Hello, World!&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Searching"><a href="#Searching" class="headerlink" title="Searching"></a>Searching</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> find(word, letter)</span><br><span class="line">    index = firstindex(word)</span><br><span class="line">    <span class="keyword">while</span> index &lt;= sizeof(word)</span><br><span class="line">        <span class="keyword">if</span> word[index] == letter</span><br><span class="line">            <span class="keyword">return</span> index</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        index = nextind(word, index)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    -<span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Looping-and-Counting"><a href="#Looping-and-Counting" class="headerlink" title="Looping and Counting"></a>Looping and Counting</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">word = <span class="string">&quot;banana&quot;</span></span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> word</span><br><span class="line">    <span class="keyword">if</span> letter == <span class="string">&#x27;a&#x27;</span></span><br><span class="line">        <span class="keyword">global</span> counter = counter + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">println(counter)</span><br></pre></td></tr></table></figure><h3 id="String-Library"><a href="#String-Library" class="headerlink" title="String Library"></a>String Library</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; uppercase(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line"><span class="string">&quot;HELLO, WORLD!&quot;</span></span><br><span class="line"></span><br><span class="line">julia&gt; findfirst(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;banana&quot;</span>)</span><br><span class="line"><span class="number">2</span>:<span class="number">2</span></span><br><span class="line"></span><br><span class="line">julia&gt; findfirst(<span class="string">&quot;na&quot;</span>, <span class="string">&quot;banana&quot;</span>)</span><br><span class="line"><span class="number">3</span>:<span class="number">4</span></span><br><span class="line"></span><br><span class="line">julia&gt; findnext(<span class="string">&quot;na&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="number">4</span>)</span><br><span class="line"><span class="number">5</span>:<span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="The-∈-Operator"><a href="#The-∈-Operator" class="headerlink" title="The ∈ Operator"></a>The <code>∈</code> Operator</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; <span class="string">&#x27;a&#x27;</span> ∈ <span class="string">&quot;banana&quot;</span>    <span class="comment"># &#x27;a&#x27; in &quot;banana&quot;</span></span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="String-Comparison"><a href="#String-Comparison" class="headerlink" title="String Comparison"></a>String Comparison</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">word = <span class="string">&quot;Pineapple&quot;</span></span><br><span class="line"><span class="keyword">if</span> word &lt; <span class="string">&quot;banana&quot;</span></span><br><span class="line">    println(<span class="string">&quot;Your word, <span class="subst">$(word)</span>, comes before banana.&quot;</span>)</span><br><span class="line"><span class="keyword">elseif</span> word &gt; <span class="string">&quot;banana&quot;</span></span><br><span class="line">    println(<span class="string">&quot;Your word, <span class="subst">$(word)</span>, comes after banana.&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    println(<span class="string">&quot;All right, bananas.&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">&gt; Your word, Pineapple, comes before banana.</span><br></pre></td></tr></table></figure><h2 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h2><p><code>Array</code>为<code>Julia</code>内置的数据结构。</p><h3 id="An-Array-is-a-Sequence"><a href="#An-Array-is-a-Sequence" class="headerlink" title="An Array is a Sequence"></a>An Array is a Sequence</h3><p>数组中元素不一定要是同一种类型，最简单的创建数组的方法是用中括号<code>[]</code>：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&quot;spam&quot;</span>, <span class="number">2.0</span>, <span class="number">5</span>, [<span class="number">10</span>, <span class="number">20</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; cheeses = [<span class="string">&quot;Cheddar&quot;</span>, <span class="string">&quot;Edam&quot;</span>, <span class="string">&quot;Gouda&quot;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; numbers = [<span class="number">42</span>, <span class="number">123</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; empty = [];</span><br><span class="line"></span><br><span class="line">julia&gt; print(cheeses, <span class="string">&quot; &quot;</span>, numbers, <span class="string">&quot; &quot;</span>, empty)</span><br><span class="line">[<span class="string">&quot;Cheddar&quot;</span>, <span class="string">&quot;Edam&quot;</span>, <span class="string">&quot;Gouda&quot;</span>] [<span class="number">42</span>, <span class="number">123</span>] <span class="built_in">Any</span>[]</span><br></pre></td></tr></table></figure><p>我们可以使用<code>typeof</code>来查看类型：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; typeof(cheeses)</span><br><span class="line"><span class="built_in">Array</span>&#123;<span class="built_in">String</span>,<span class="number">1</span>&#125;</span><br><span class="line">julia&gt; typeof(numbers)</span><br><span class="line"><span class="built_in">Array</span>&#123;<span class="built_in">Int64</span>,<span class="number">1</span>&#125;</span><br><span class="line">julia&gt; typeof(empty)</span><br><span class="line"><span class="built_in">Array</span>&#123;<span class="built_in">Any</span>,<span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure><p>数组类型包含数组中元素的类型和维度。</p><h3 id="Arrays-Are-Mutable"><a href="#Arrays-Are-Mutable" class="headerlink" title="Arrays Are Mutable"></a>Arrays Are Mutable</h3><p>数组是可变的：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; numbers[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">julia&gt; print(numbers)</span><br><span class="line">[<span class="number">42</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><h3 id="Traversing-an-Array"><a href="#Traversing-an-Array" class="headerlink" title="Traversing an Array"></a>Traversing an Array</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> cheese <span class="keyword">in</span> cheeses</span><br><span class="line">    println(cheese)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> []</span><br><span class="line">    println(<span class="string">&quot;This can never happens.&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Array-Slices"><a href="#Array-Slices" class="headerlink" title="Array Slices"></a>Array Slices</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; print(t[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">julia&gt; print(t[<span class="number">3</span>:<span class="keyword">end</span>])</span><br><span class="line">[<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br></pre></td></tr></table></figure><p><code>[:]</code>拷贝数组：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; print(t[:])</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="Array-Library"><a href="#Array-Library" class="headerlink" title="Array Library"></a>Array Library</h3><p><code>push!</code>向数组中添加元素：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; push!(t, <span class="string">&#x27;d&#x27;</span>);</span><br><span class="line"></span><br><span class="line">julia&gt; print(t)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br></pre></td></tr></table></figure><p><code>append!</code>将第一个数组的元素放在第二个数组前面：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; t2 = [<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; append!(t1, t2);</span><br><span class="line"></span><br><span class="line">julia&gt; print(t1)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>]</span><br></pre></td></tr></table></figure><p><code>sort!</code>排序，改变原数组，<code>sort</code>不改变原数组，带<code>!</code>的函数改变原来的数组。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = [<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; sort!(t);</span><br><span class="line"></span><br><span class="line">julia&gt; print(t)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>]</span><br><span class="line"></span><br><span class="line">julia&gt; t1 = [<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; t2 = sort(t1);</span><br><span class="line"></span><br><span class="line">julia&gt; print(t1)</span><br><span class="line">[<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>]</span><br><span class="line">julia&gt; print(t2)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="Dot-Syntax"><a href="#Dot-Syntax" class="headerlink" title="Dot Syntax"></a>Dot Syntax</h3><p>函数前添加<code>.</code>是逐元素操作：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = uppercase.([<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;def&quot;</span>, <span class="string">&quot;ghi&quot;</span>]);</span><br><span class="line"></span><br><span class="line">julia&gt; print(t)</span><br><span class="line">[<span class="string">&quot;ABC&quot;</span>, <span class="string">&quot;DEF&quot;</span>, <span class="string">&quot;GHI&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="Deleting-Inserting-Elements"><a href="#Deleting-Inserting-Elements" class="headerlink" title="Deleting (Inserting) Elements"></a>Deleting (Inserting) Elements</h3><p><code>splice!</code>删除返回元素：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; splice!(t, <span class="number">2</span>)</span><br><span class="line"><span class="string">&#x27;b&#x27;</span>: ASCII/Unicode U+<span class="number">0062</span> (category Ll: Letter, lowercase)</span><br><span class="line">julia&gt; print(t)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br></pre></td></tr></table></figure><p><code>pop!</code>删除并返回最后一个元素：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; pop!(t)</span><br><span class="line"><span class="string">&#x27;c&#x27;</span>: ASCII/Unicode U+<span class="number">0063</span> (category Ll: Letter, lowercase)</span><br><span class="line">julia&gt; print(t)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br></pre></td></tr></table></figure><p><code>popfirst!</code>删除返回第一个元素：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; popfirst!(t)</span><br><span class="line"><span class="string">&#x27;a&#x27;</span>: ASCII/Unicode U+<span class="number">0061</span> (category Ll: Letter, lowercase)</span><br><span class="line">julia&gt; print(t)</span><br><span class="line">[<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br></pre></td></tr></table></figure><p><code>pushfirst!</code> and <code>push!</code>分别在第一位和最后一位插入数据。</p><p><code>deleteat!</code>删除但不返回元素：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; print(deleteat!(t, <span class="number">2</span>))</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br></pre></td></tr></table></figure><p> <code>insert!</code>在指定位置插入元素：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; print(insert!(t, <span class="number">2</span>, <span class="string">&#x27;x&#x27;</span>))</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="Arrays-and-Strings"><a href="#Arrays-and-Strings" class="headerlink" title="Arrays and Strings"></a>Arrays and Strings</h3><p><code>collect</code>可以将字符串转为数组：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = collect(<span class="string">&quot;spam&quot;</span>);</span><br><span class="line"></span><br><span class="line">julia&gt; print(t)</span><br><span class="line">[<span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;m&#x27;</span>]</span><br></pre></td></tr></table></figure><p><code>split</code>可以将字符串按照分隔符分割为数组：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = split(<span class="string">&quot;spam-spam-spam&quot;</span>, <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line"></span><br><span class="line">julia&gt; print(t)</span><br><span class="line"><span class="built_in">SubString</span>&#123;<span class="built_in">String</span>&#125;[<span class="string">&quot;spam&quot;</span>, <span class="string">&quot;spam&quot;</span>, <span class="string">&quot;spam&quot;</span>]</span><br></pre></td></tr></table></figure><p><code>join</code>是<code>split</code>的逆运算，将数组转为字符串：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t = [<span class="string">&quot;pining&quot;</span>, <span class="string">&quot;for&quot;</span>, <span class="string">&quot;the&quot;</span>, <span class="string">&quot;fjords&quot;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; s = join(t, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="string">&quot;pining for the fjords&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Objects-and-Values"><a href="#Objects-and-Values" class="headerlink" title="Objects and Values"></a>Objects and Values</h3><p>一个对象是变量可以引用的东西。</p><p>对于字符串：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; a = <span class="string">&quot;banana&quot;</span></span><br><span class="line"><span class="string">&quot;banana&quot;</span></span><br><span class="line">julia&gt; b = <span class="string">&quot;banana&quot;</span></span><br><span class="line"><span class="string">&quot;banana&quot;</span></span><br><span class="line">julia&gt; a ≡ b</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure><p>对于数组：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; b = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; a ≡ b</span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="Aliasing"><a href="#Aliasing" class="headerlink" title="Aliasing"></a>Aliasing</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; b = a;</span><br><span class="line"></span><br><span class="line">julia&gt; b ≡ a</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure><p>变量与对象的关联称为引用。在这个例子中，有两个对同一个对象的引用。</p><h3 id="Array-Arguments"><a href="#Array-Arguments" class="headerlink" title="Array Arguments"></a>Array Arguments</h3><p>当把一个数组传给函数时，函数得到数组的引用，函数会改变数组：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> deletehead!(t)</span><br><span class="line">    popfirst!(t)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">julia&gt; letters = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"></span><br><span class="line">julia&gt; deletehead!(letters);</span><br><span class="line"></span><br><span class="line">julia&gt; print(letters)</span><br><span class="line">[<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br></pre></td></tr></table></figure><p>函数<code>vcat</code>创建新的数组，不会改变原数组：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">julia&gt; t3 = vcat(t1, [<span class="number">4</span>]);</span><br><span class="line"></span><br><span class="line">julia&gt; print(t1)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">julia&gt; print(t3)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>切片也会创建新数组，不会改变原数组：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> baddeletehead(t)</span><br><span class="line">    t = t[<span class="number">2</span>:<span class="keyword">end</span>]                <span class="comment"># WRONG!</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">julia&gt; t4 = baddeletehead(t3);</span><br><span class="line"></span><br><span class="line">julia&gt; print(t3)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">julia&gt; print(t4)</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimglf6.lf127.net%2Fimg%2FanBSb2NqdEc5dTlseXpNTWxpY0RWQ2NwUlAyVmFEa2lFSVo0TVM4WXNwSndDMUdvN3crMS9nPT0.jpg%3FimageView%26thumbnail%3D2160x0%26quality%3D90%26interlace%3D1%26type%3Djpg&amp;refer=http%3A%2F%2Fimglf6.lf127.net&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=auto?sec=1659263087&amp;t=d2faeee051aa3c102a86e173d74306ad&quot; style=&quot;zoom: 100%;&quot; /&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;书籍网址：&lt;a href=&quot;https://benlauwens.github.io/ThinkJulia.jl/latest/book.html&quot;&gt;https://benlauwens.github.io/ThinkJulia.jl/latest/book.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="书籍阅读" scheme="https://www.hfcouc.work/categories/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="Julia" scheme="https://www.hfcouc.work/tags/Julia/"/>
    
    <category term="编程" scheme="https://www.hfcouc.work/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>B站课程Mathematica前三周</title>
    <link href="https://www.hfcouc.work/2022/07/01/math/"/>
    <id>https://www.hfcouc.work/2022/07/01/math/</id>
    <published>2022-07-01T10:19:12.000Z</published>
    <updated>2022-07-01T10:27:07.977Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p align="center">    <img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fi0.hdslb.com%2Fbfs%2Farticle%2F7d065302ef2984abddb60152758c13bd66f74fba.jpg&refer=http%3A%2F%2Fi0.hdslb.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1659263087&t=447b47f50cbb4d4d181ed18e4ac43cb5" style="zoom: 100%;" /></p><blockquote><p> B站课程链接：<a href="https://www.bilibili.com/video/BV1av411N7Xi?spm_id_from=333.999.0.0&amp;vd_source=6177c61c946280bb88c727585de76bc8">https://www.bilibili.com/video/BV1av411N7Xi?spm_id_from=333.999.0.0&amp;vd_source=6177c61c946280bb88c727585de76bc8</a></p></blockquote><span id="more"></span><h2 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h2><h3 id="值、变量、类型"><a href="#值、变量、类型" class="headerlink" title="值、变量、类型"></a>值、变量、类型</h3><p>以下三种对象成为原子(atom)：</p><p>符号(Symbol)：由字母和数字(数字不能在起始位置)构成的有限序列</p><p>数字(Number)：整数、有理数、实数、复数</p><p>字符串(String)：由双引号<code>&quot;&quot;</code>括起来的任意字符构成的有限序列</p><h4 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h4><p>我们在命名时应注意避开系统内建符号，系统内建符号的特点为：</p><ul><li>由第一个字母大写的单词组成(Camel命名法)：True、False、FactorInteger、SetAttributes</li><li>用来做判断的函数末尾通常有”Q”：EvenQ、PrimeQ、MatchQ</li><li>用人名命名的符号=人名+符号名：EulerGamma、BesselJ、DiracDelta</li></ul><h4 id="类型检查"><a href="#类型检查" class="headerlink" title="类型检查"></a>类型检查</h4><p>一个编程语言的类型检查越严格，程序员受到的束缚越大。Mathematica程序通常来说都比较短小，靠程序员自觉检查类型基本上就足够了，所以不需要太严格的类型检查机制。一个较弱的类型检查可以让程序员写出更灵活的程序。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Sin</span><span class="punctuation">[</span><span class="string">&quot;I&#x27;m a string!&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">Sin</span><span class="punctuation">[</span><span class="string">&quot;I&#x27;m a string!&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Sin</span><span class="punctuation">[</span><span class="string">&quot;I&#x27;m a string!&quot;</span><span class="punctuation">]</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="string">&quot;I&#x27;m a string!&quot;</span> <span class="operator">-&gt;</span> <span class="built_in">Pi</span><span class="operator">/</span><span class="number">3</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">Sqrt</span><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="operator">/</span><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="条件、循环、子程序"><a href="#条件、循环、子程序" class="headerlink" title="条件、循环、子程序"></a>条件、循环、子程序</h3><p>在Mathematica中，条件和循环结构其实用的并不多。这是因为条件结构的功能基本上可以通过核心语言中的模式匹配来完成；而循环结构的功能则可以通过表处理和泛函编程完成。</p><h4 id="简单的条件判断"><a href="#简单的条件判断" class="headerlink" title="简单的条件判断"></a>简单的条件判断</h4><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">True</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;Then&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">Then</span></span><br><span class="line"><span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">False</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;Then&quot;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;Else&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">Else</span></span><br><span class="line"><span class="built_in">If</span><span class="punctuation">[</span><span class="variable">a</span> <span class="operator">==</span> <span class="variable">b</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;Then&quot;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;Else&quot;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;Unevaluated&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">Unevaluated</span></span><br><span class="line"><span class="built_in">If</span><span class="punctuation">[</span><span class="variable">a</span> <span class="operator">===</span> <span class="variable">b</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;Then&quot;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;Else&quot;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;Unevaluated&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">Else</span></span><br></pre></td></tr></table></figure><h4 id="多重条件判断"><a href="#多重条件判断" class="headerlink" title="多重条件判断"></a>多重条件判断</h4><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span><span class="operator">;</span> <span class="built_in">Which</span><span class="punctuation">[</span><span class="variable">x</span> <span class="operator">==</span> <span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="variable">x</span> <span class="operator">==</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="variable">x</span> <span class="operator">==</span> <span class="number">3</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="built_in">True</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;x!=1,2,3&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">x</span><span class="operator">!=</span><span class="number">1</span><span class="operator">,</span><span class="number">2</span><span class="operator">,</span><span class="number">3</span></span><br><span class="line"><span class="built_in">Plot</span><span class="punctuation">[</span><span class="built_in">Piecewise</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="variable">x</span> <span class="operator">==</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="operator">/</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">x</span> <span class="operator">!=</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">,</span> <span class="operator">-</span><span class="number">4</span> <span class="built_in">Pi</span><span class="operator">,</span> <span class="number">4</span> <span class="built_in">Pi</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/math1.jpg" alt=""></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Switch</span><span class="punctuation">[</span><span class="variable">b</span><span class="operator">,</span> <span class="built_in">True</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="built_in">False</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="type">_</span><span class="operator">,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;b is not a boolean value!&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">b</span> <span class="variable">is</span> <span class="variable">not</span> <span class="variable">a</span> <span class="variable">boolean</span> <span class="variable">value</span><span class="operator">!</span></span><br></pre></td></tr></table></figure><h4 id="简单循环"><a href="#简单循环" class="headerlink" title="简单循环"></a>简单循环</h4><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Do</span><span class="punctuation">[</span><span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;哟,&quot;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="string">&quot;切克闹!&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Do</span><span class="punctuation">[</span><span class="built_in">Print</span><span class="punctuation">[</span><span class="built_in">Prime</span><span class="punctuation">[</span><span class="variable">i</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">i</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="built_in">PrimePi</span><span class="punctuation">[</span><span class="number">100</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Do</span><span class="punctuation">[</span><span class="built_in">Print</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">,</span> <span class="string">&quot; is a prime number.&quot;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">i</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">7</span><span class="operator">,</span> <span class="number">11</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h4 id="复杂循环"><a href="#复杂循环" class="headerlink" title="复杂循环"></a>复杂循环</h4><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">For</span><span class="punctuation">[</span><span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span><span class="operator">;</span> <span class="variable">t</span> <span class="operator">=</span> <span class="variable">i</span><span class="operator">,</span> <span class="variable">i</span> <span class="operator">&lt;=</span> <span class="number">10</span><span class="operator">,</span> <span class="variable">i</span><span class="operator">++,</span> <span class="built_in">Print</span><span class="punctuation">[</span><span class="variable">t</span> <span class="operator">*=</span> <span class="variable">i</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">n</span> <span class="operator">=</span> <span class="number">1234567</span><span class="operator">;</span> <span class="built_in">While</span><span class="punctuation">[</span><span class="built_in">Not</span><span class="punctuation">[</span><span class="built_in">PrimeQ</span><span class="punctuation">[</span><span class="operator">++</span><span class="variable">n</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span> <span class="variable">n</span></span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>函数定义方法一：模式匹配+延迟赋值</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">f</span><span class="punctuation">[</span><span class="type">x_</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="operator">;</span></span><br><span class="line"><span class="variable">f</span><span class="punctuation">[</span><span class="type">x_</span><span class="operator">,</span> <span class="type">y_</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">x</span> <span class="variable">y</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><p>函数定义方法二：纯函数($\lambda-$表达式、匿名函数)</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">f1</span> <span class="operator">=</span> <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(* 简写形式 *)</span></span><br><span class="line"><span class="variable">f2</span> <span class="operator">=</span> <span class="type">#</span><span class="operator">^</span><span class="number">2</span> <span class="operator">&amp;;</span></span><br><span class="line"><span class="variable">g1</span> <span class="operator">=</span> <span class="built_in">Function</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="variable">x</span> <span class="variable">y</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(* 简写形式 *)</span></span><br><span class="line"><span class="variable">g2</span> <span class="operator">=</span> <span class="type">#1</span> <span class="type">#2</span> <span class="operator">&amp;;</span></span><br></pre></td></tr></table></figure><p>例子：求不大于给定正整数$n$的所有素数的和</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(* 类C实现 *)</span></span><br><span class="line"><span class="variable">myPrimeQ</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span><span class="operator">;</span> <span class="variable">max</span> <span class="operator">=</span> <span class="built_in">Floor</span><span class="punctuation">[</span><span class="built_in">Sqrt</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">+</span> <span class="number">1</span><span class="operator">;</span> </span><br><span class="line">   <span class="built_in">While</span><span class="punctuation">[</span><span class="built_in">Mod</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">]</span> <span class="operator">!=</span> <span class="number">0</span> <span class="operator">&amp;&amp;</span> <span class="variable">i</span> <span class="operator">&lt;</span> <span class="variable">max</span><span class="operator">,</span> <span class="variable">i</span><span class="operator">++</span><span class="punctuation">]</span><span class="operator">;</span> <span class="built_in">Not</span><span class="punctuation">[</span><span class="variable">i</span> <span class="operator">&lt;</span> <span class="variable">max</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">myPrimeSum</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">n</span><span class="operator">,</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span><span class="operator">;</span> <span class="built_in">Do</span><span class="punctuation">[</span><span class="built_in">If</span><span class="punctuation">[</span><span class="variable">myPrimeQ</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">sum</span> <span class="operator">+=</span> <span class="variable">x</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="variable">n</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span> <span class="variable">sum</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*核心语言实现。Mathematica内部存储了前10亿个素数的素数表*)</span></span><br><span class="line"><span class="variable">myPrimesum2</span> <span class="operator">=</span> <span class="built_in">Plus</span> <span class="operator">@@</span> <span class="built_in">Prime</span> <span class="operator">/@</span> <span class="built_in">Range</span> <span class="operator">@</span> <span class="built_in">PrimePi</span><span class="punctuation">[</span><span class="type">#</span><span class="punctuation">]</span> <span class="operator">&amp;;</span></span><br><span class="line"><span class="built_in">Timing</span><span class="punctuation">[</span><span class="type">#</span><span class="punctuation">[</span><span class="number">100000</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="variable">myPrimeSum</span><span class="operator">,</span> <span class="variable">myPrimesum2</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">3.4375</span><span class="operator">,</span> <span class="number">454396537</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">0.</span><span class="operator">,</span> <span class="number">454396537</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h2><h3 id="核心语言"><a href="#核心语言" class="headerlink" title="核心语言"></a>核心语言</h3><p>什么是Mathematica核心语言</p><p>我们已经看到，虽然Mathematica提供了一些函数可以让我们像编写C程序一样编写Mathematica程序，但是这样编写出来的程序的效率很成问题，而且程序本身也不易懂。另一方面，我们还展示了如何用所谓Mathematica核心语言编制出更高效、更简明的程序。如：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">myPrimesum2</span> <span class="operator">=</span> <span class="built_in">Plus</span> <span class="operator">@@</span> <span class="built_in">Prime</span> <span class="operator">/@</span> <span class="built_in">Range</span> <span class="operator">@</span> <span class="built_in">PrimePi</span><span class="punctuation">[</span><span class="type">#</span><span class="punctuation">]</span> <span class="operator">&amp;;</span></span><br></pre></td></tr></table></figure><p>这里有很多符号(<code>@@</code>、<code>/@</code>、<code>#</code>、<code>&amp;</code>)，它们其实只是一些Mathematica内建函数的简写形式，其完整形式为：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">myPrimesum2</span> <span class="operator">=</span> <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">n</span><span class="operator">,</span></span><br><span class="line">  <span class="built_in">Apply</span><span class="punctuation">[</span></span><br><span class="line">   <span class="built_in">Plus</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Map</span><span class="punctuation">[</span></span><br><span class="line">    <span class="built_in">Prime</span><span class="operator">,</span></span><br><span class="line">    <span class="built_in">Range</span><span class="punctuation">[</span></span><br><span class="line">     <span class="built_in">PrimePi</span><span class="punctuation">[</span><span class="variable">n</span><span class="punctuation">]</span></span><br><span class="line">     <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">   <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span> </span><br></pre></td></tr></table></figure><p>在Mathematica中，我们可以用TreeForm来获得一个表达式的语法树。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TreeForm</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="variable">a</span> <span class="operator">+</span> <span class="variable">b</span><span class="operator">^</span><span class="variable">n</span><span class="punctuation">)</span><span class="operator">/</span><span class="variable">z</span> <span class="operator">==</span> <span class="variable">x</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/math2.jpg" alt=""></p><p>我们也可以用FullForm来获得一个表达式在Mathematica内部的完整形式：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">FullForm</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="variable">a</span> <span class="operator">+</span> <span class="variable">b</span><span class="operator">^</span><span class="variable">n</span><span class="punctuation">)</span><span class="operator">/</span><span class="variable">z</span> <span class="operator">==</span> <span class="variable">x</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">FullForm</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="variable">a</span> <span class="operator">+</span> <span class="variable">b</span><span class="operator">^</span><span class="variable">n</span><span class="punctuation">)</span><span class="operator">/</span><span class="variable">z</span> <span class="operator">==</span> <span class="variable">x</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>在Mathematica中，满足如下条件的对象就叫做表达式</p><ol><li>原子对象是表达式</li><li>若$\mathrm{F,X_1,X_2,\cdots,X_n}$是表达式，则$\mathrm{F[X_1,X_2,\cdots,X_n]}$也是表达式。</li></ol><p>Mathematica中的一切对象都是表达式，一个Mathematica程序就是一个表达式。</p><blockquote><p>这一事实如此地重要，以至于有人将其称为Mathematica的第一原理：万物皆表(达式)。</p></blockquote><p>Mathematica的计算：</p><ol><li>从待计算对象中识别一些可化简的模式</li><li>将识别出的模式用已知的规则进行化解</li></ol><p>Mathematica是这样进行计算的，其中第一步叫做模式匹配，第二步叫做规则代入。基于模式和规则的计算模型在数理逻辑或计算机科学中叫做重写系统。</p><p>Mathematica第二原理：计算即重写。</p><h3 id="表达式与表"><a href="#表达式与表" class="headerlink" title="表达式与表"></a>表达式与表</h3><p>根据定义，一个表达式或者是原子，或者是形如$\mathrm{F[X_1,X_2,\cdots,X_n]}$的函数。事实上，原子也可以看成后者的特殊情况，只要我们把函数的自变量个数取成零就行了。所以，以后我们讨论表达式的时候，总把它写成$\mathrm{F[X_1,X_2,\cdots,X_n]}$的样子。</p><p>给定一个表达式$\mathrm{F[X_1,X_2,\cdots,X_n]}$，我们称$\mathrm{F}$是它的”头”。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Head</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">/</span><span class="number">2</span><span class="operator">,</span> <span class="built_in">True</span><span class="operator">,</span> <span class="string">&quot;number&quot;</span><span class="operator">,</span> <span class="variable">a</span> <span class="operator">+</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">a</span> <span class="operator">-</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">*</span><span class="variable">b</span><span class="operator">,</span> </span><br><span class="line">  <span class="variable">a</span><span class="operator">/</span><span class="variable">b</span><span class="operator">,</span> <span class="punctuation">(</span><span class="variable">f</span> <span class="operator">+</span> <span class="variable">g</span><span class="punctuation">)</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="built_in">Integer</span><span class="operator">,</span> <span class="built_in">Rational</span><span class="operator">,</span> <span class="built_in">Symbol</span><span class="operator">,</span> <span class="built_in">String</span><span class="operator">,</span> <span class="built_in">Plus</span><span class="operator">,</span> <span class="built_in">Plus</span><span class="operator">,</span> <span class="built_in">Times</span><span class="operator">,</span> <span class="built_in">Times</span><span class="operator">,</span> <span class="variable">f</span> <span class="operator">+</span> <span class="variable">g</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>我们发现对于原子表达式：符号的头总是Symbol；数字的头则依赖于它的类型，结果可以是Integer、Rational、Real和Complex；字符串的头总是String；图片的头是Image等等。</p><p>利用这个性质，我们可以判断一个表达式是否是原子。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">myAtomQ</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">MemberQ</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="built_in">Symbol</span><span class="operator">,</span> <span class="built_in">Integer</span><span class="operator">,</span> <span class="built_in">Rational</span><span class="operator">,</span> <span class="built_in">Reals</span><span class="operator">,</span> <span class="built_in">Complex</span><span class="operator">,</span> <span class="built_in">String</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Image</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="built_in">Head</span><span class="punctuation">[</span><span class="variable">ex</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><p>除了头以外，我们也常常需要将表达式的参数部分取出来。取出来的东西一些表达式构成的序列，是没有头的。但是在Mathematica里所有的表达式都必须有头，所以，为了处理这种无头表达式，Mathematica引入表(List)这个概念，然后规定所哟无头表达式的头都是List。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ex</span> <span class="operator">=</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">List</span> <span class="operator">@@</span> <span class="variable">ex</span></span><br><span class="line"><span class="built_in">Apply</span><span class="punctuation">[</span><span class="variable">g</span><span class="operator">,</span> <span class="variable">ex</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment">(*可以将Apply函数理解为换头*)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">g</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>表这种表达式还有一种变体，叫做序列(Sequence)。序列可以认为是没有两边花括号(“{}”)的表，或者说，表是用序列的元素做成了一个新的对象，而序列是某种更原始的东西。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ex</span> <span class="operator">=</span> <span class="variable">h</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">seq</span> <span class="operator">=</span> <span class="built_in">Sequence</span> <span class="operator">@@</span> <span class="variable">ex</span></span><br><span class="line"><span class="variable">lst</span> <span class="operator">=</span> <span class="built_in">List</span> <span class="operator">@@</span> <span class="variable">ex</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">Sequence</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">f</span><span class="punctuation">[</span><span class="variable">seq</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">f</span><span class="punctuation">[</span><span class="variable">lst</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">f</span> <span class="operator">@@</span> <span class="variable">lst</span></span><br><span class="line"><span class="variable">f</span><span class="punctuation">[</span><span class="variable">seq</span><span class="operator">,</span> <span class="variable">lst</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>上面的例子表明，当我们想把一个表达式的参数传递给另一个函数时，用List换头的结果可能不是我们想要的，因为多了一层花括号。如果不想要这层花括号，就要用Sequence换头。</p><p>除了用Head和Apply以外，Mathematica还提供了另一种访问复合表达式内部表达式的方法，即系统内建函数Part，简写形式为<code>[[...]]</code>。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ex</span> <span class="operator">=</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="operator">,</span> <span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>对于嵌套的表达式，我们可以多次地取Part：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ex</span> <span class="operator">=</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">g</span><span class="punctuation">[</span><span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">h</span><span class="punctuation">[</span><span class="variable">d</span><span class="operator">,</span> <span class="variable">k</span><span class="punctuation">[</span><span class="variable">e</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">j</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">i</span></span><br></pre></td></tr></table></figure><p>这个操作可以通过一个Part实现：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">3</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">i</span></span><br></pre></td></tr></table></figure><p>另外Part还有更多的用法：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="operator">-</span><span class="number">2</span><span class="operator">,</span> <span class="operator">-</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">ex</span><span class="punctuation">[</span><span class="number">1</span> <span class="operator">;;</span> <span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span> <span class="operator">;;</span> <span class="number">3</span> <span class="operator">;;</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">i</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">g</span><span class="punctuation">[</span><span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">h</span><span class="punctuation">[</span><span class="variable">d</span><span class="operator">,</span> <span class="variable">k</span><span class="punctuation">[</span><span class="variable">e</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">j</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">g</span><span class="punctuation">[</span><span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">h</span><span class="punctuation">[</span><span class="variable">d</span><span class="operator">,</span> <span class="variable">k</span><span class="punctuation">[</span><span class="variable">e</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">j</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="number">1</span> <span class="operator">;;</span> <span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">h</span><span class="punctuation">[</span><span class="variable">d</span><span class="operator">,</span> <span class="variable">k</span><span class="punctuation">[</span><span class="variable">e</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">j</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>最常用的Part都有属于它们自己的内建函数：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">op</span><span class="operator">,</span> <span class="variable">op</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="built_in">First</span><span class="operator">,</span> <span class="built_in">Last</span><span class="operator">,</span> <span class="built_in">Rest</span><span class="operator">,</span> <span class="built_in">Most</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x4</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="built_in">Take</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Drop</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>对于Take函数，我们可以这样替代：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>对于给定的表达式，有两个值很重要，即它的长度和深度：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Length</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">g</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">h</span><span class="punctuation">[</span><span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Depth</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">g</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">h</span><span class="punctuation">[</span><span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="表的构造"><a href="#表的构造" class="headerlink" title="表的构造"></a>表的构造</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Range</span><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Range</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Range</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">,</span> <span class="number">10</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="number">7</span><span class="operator">,</span> <span class="number">8</span><span class="operator">,</span> <span class="number">9</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="number">7</span><span class="operator">,</span> <span class="number">8</span><span class="operator">,</span> <span class="number">9</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">8</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Table</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">^</span><span class="number">2</span> <span class="operator">+</span> <span class="variable">i</span> <span class="operator">+</span> <span class="number">1</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">i</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Table</span><span class="punctuation">[</span><span class="built_in">KroneckerDelta</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">,</span> <span class="variable">j</span> <span class="operator">-</span> <span class="number">1</span><span class="punctuation">]</span> <span class="operator">+</span> <span class="variable">t</span> <span class="built_in">KroneckerDelta</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">,</span> <span class="variable">j</span> <span class="operator">+</span> <span class="number">4</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">i</span><span class="operator">,</span> </span><br><span class="line">   <span class="number">5</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">j</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span><span class="punctuation">]</span> <span class="operator">//</span> <span class="built_in">MatrixForm</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">7</span><span class="operator">,</span> <span class="number">13</span><span class="operator">,</span> <span class="number">21</span><span class="operator">,</span> <span class="number">31</span><span class="operator">,</span> <span class="number">43</span><span class="operator">,</span> <span class="number">57</span><span class="operator">,</span> <span class="number">73</span><span class="operator">,</span> <span class="number">91</span><span class="operator">,</span> <span class="number">111</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\left(\begin{array}{lllll}0 & 1 & 0 & 0 & 0 \\0 & 0 & 1 & 0 & 0 \\0 & 0 & 0 & 1 & 0 \\0 & 0 & 0 & 0 & 1 \\t & 0 & 0 & 0 & 0\end{array}\right)</script><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">^</span><span class="number">2</span> <span class="operator">+</span> <span class="type">#</span> <span class="operator">+</span> <span class="number">1</span> <span class="operator">&amp;,</span> <span class="number">10</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">7</span><span class="operator">,</span> <span class="number">13</span><span class="operator">,</span> <span class="number">21</span><span class="operator">,</span> <span class="number">31</span><span class="operator">,</span> <span class="number">43</span><span class="operator">,</span> <span class="number">57</span><span class="operator">,</span> <span class="number">73</span><span class="operator">,</span> <span class="number">91</span><span class="operator">,</span> <span class="number">111</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="type">#</span><span class="operator">^</span><span class="number">2</span> <span class="operator">+</span> <span class="type">#</span> <span class="operator">+</span> <span class="number">1</span> <span class="operator">&amp;</span> <span class="operator">/@</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">7</span><span class="operator">,</span> <span class="number">13</span><span class="operator">,</span> <span class="number">21</span><span class="operator">,</span> <span class="number">31</span><span class="operator">,</span> <span class="number">43</span><span class="operator">,</span> <span class="number">57</span><span class="operator">,</span> <span class="number">73</span><span class="operator">,</span> <span class="number">91</span><span class="operator">,</span> <span class="number">111</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Array</span><span class="punctuation">[</span><span class="variable">f</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="variable">h</span><span class="punctuation">]</span><span class="comment">(*5指的是长度，2指的是起始位置，h指的是头*)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">h</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">6</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Tuples</span><span class="punctuation">[</span><span class="built_in">Range</span><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> </span><br><span class="line">  <span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="built_in">Outer</span><span class="punctuation">[</span><span class="variable">f</span><span class="operator">,</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="number">3</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">3</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="表的查询和搜索"><a href="#表的查询和搜索" class="headerlink" title="表的查询和搜索"></a>表的查询和搜索</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ex</span> <span class="operator">=</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">,</span> <span class="built_in">MemberQ</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="operator">,</span> <span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="operator">,</span> <span class="variable">x4</span><span class="operator">,</span> <span class="variable">x5</span><span class="operator">,</span> <span class="variable">x6</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">,</span> <span class="built_in">FreeQ</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="operator">,</span> <span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="operator">,</span> <span class="variable">x4</span><span class="operator">,</span> <span class="variable">x5</span><span class="operator">,</span> <span class="variable">x6</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="built_in">False</span><span class="operator">,</span> <span class="built_in">True</span><span class="operator">,</span> <span class="built_in">True</span><span class="operator">,</span> <span class="built_in">True</span><span class="operator">,</span> <span class="built_in">True</span><span class="operator">,</span> <span class="built_in">False</span><span class="operator">,</span> <span class="built_in">False</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="built_in">False</span><span class="operator">,</span> <span class="built_in">False</span><span class="operator">,</span> <span class="built_in">False</span><span class="operator">,</span> <span class="built_in">False</span><span class="operator">,</span> <span class="built_in">False</span><span class="operator">,</span> <span class="built_in">True</span><span class="operator">,</span> <span class="built_in">True</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>可以看出MemberQ和FreeQ结果并不是相反的。</p><p>MemberQ函数还有参数：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">MemberQ</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="variable">f</span><span class="operator">,</span> <span class="built_in">Heads</span> <span class="operator">-&gt;</span> <span class="built_in">True</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br></pre></td></tr></table></figure><p>FreeQ函数可以指定深度（默认深度是所有深度都查找）：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">FreeQ</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">FreeQ</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="comment">(*在第一层搜索*)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">False</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br></pre></td></tr></table></figure><p>还有Count函数(默认只看第一层)：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">euler</span> <span class="operator">=</span> <span class="punctuation">(</span><span class="variable">a</span> <span class="operator">+</span> <span class="variable">b</span><span class="operator">^</span><span class="variable">n</span><span class="punctuation">)</span><span class="operator">/</span><span class="variable">n</span> <span class="operator">==</span> <span class="variable">x</span><span class="operator">;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="built_in">Count</span><span class="punctuation">[</span><span class="variable">euler</span><span class="operator">,</span> <span class="variable">n</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Count</span><span class="punctuation">[</span><span class="variable">euler</span><span class="operator">,</span> <span class="variable">n</span><span class="operator">,</span> <span class="built_in">Infinity</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">0</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Position可以找到位置：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Position</span><span class="punctuation">[</span><span class="variable">euler</span><span class="operator">,</span> <span class="variable">n</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Position</span><span class="punctuation">[</span><span class="variable">euler</span><span class="operator">,</span> <span class="variable">n</span><span class="operator">,</span> <span class="number">4</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Position</span><span class="punctuation">[</span><span class="variable">euler</span><span class="operator">,</span> <span class="variable">n</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="comment">(*带&#123;&#125;表示只搜这一层，不带表示最深搜到这层*)</span></span><br><span class="line"><span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">level</span><span class="operator">,</span> <span class="built_in">Position</span><span class="punctuation">[</span><span class="variable">euler</span><span class="operator">,</span> <span class="variable">n</span><span class="operator">,</span> <span class="variable">level</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="number">0</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">level</span><span class="operator">,</span> <span class="built_in">Position</span><span class="punctuation">[</span><span class="variable">euler</span><span class="operator">,</span> <span class="variable">n</span><span class="operator">,</span> <span class="variable">level</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">level</span><span class="operator">,</span> <span class="built_in">Position</span><span class="punctuation">[</span><span class="variable">euler</span><span class="operator">,</span> <span class="variable">n</span><span class="operator">,</span> <span class="variable">level</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Select选取满足某个条件的：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Select</span><span class="punctuation">[</span><span class="built_in">Prime</span> <span class="operator">/@</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">OddQ</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Select</span><span class="punctuation">[</span><span class="built_in">Prime</span> <span class="operator">/@</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Mod</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">,</span> <span class="number">4</span><span class="punctuation">]</span> <span class="operator">==</span> <span class="number">1</span> <span class="operator">&amp;</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">7</span><span class="operator">,</span> <span class="number">11</span><span class="operator">,</span> <span class="number">13</span><span class="operator">,</span> <span class="number">17</span><span class="operator">,</span> <span class="number">19</span><span class="operator">,</span> <span class="number">23</span><span class="operator">,</span> <span class="number">29</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">13</span><span class="operator">,</span> <span class="number">17</span><span class="operator">,</span> <span class="number">29</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="表的添加、删除和修改"><a href="#表的添加、删除和修改" class="headerlink" title="表的添加、删除和修改"></a>表的添加、删除和修改</h3><p>下面的操作不改变表达式本身：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ex</span> <span class="operator">=</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="built_in">Prepend</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="variable">z</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Append</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Insert</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="variable">i</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Insert</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="variable">i</span><span class="operator">,</span> <span class="operator">-</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">z</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">i</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">i</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="variable">ex</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>下面的操作会改变表达式：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="built_in">PrependTo</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="variable">z</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">AppendTo</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">z</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">z</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Delete也不改变原表达式：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Delete</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Delete</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="operator">-</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>ReplacePart也不改变：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="built_in">ReplacePart</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="number">1</span> <span class="operator">-&gt;</span> <span class="variable">x</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">ex</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">z</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>但是下面会改变：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ex</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">=</span> <span class="variable">y</span><span class="operator">;</span></span><br><span class="line"><span class="variable">ex</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">y</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>下面的是旋转的函数：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Reverse</span><span class="punctuation">[</span><span class="variable">ex</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">RotateLeft</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">RotateRight</span><span class="punctuation">[</span><span class="variable">ex</span><span class="operator">,</span> <span class="operator">-</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">d</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="operator">,</span> <span class="variable">y</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h3><p>头部一样的表达式之间的集合运算：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Join</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x1</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Union</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x1</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Intersection</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Complement</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="operator">,</span> <span class="variable">x4</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x3</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">list</span> <span class="operator">=</span> <span class="built_in">Array</span><span class="punctuation">[</span><span class="built_in">RandomInteger</span><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">]</span> <span class="operator">&amp;,</span> <span class="punctuation">&#123;</span><span class="number">20</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Sort</span><span class="punctuation">[</span><span class="variable">list</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">6</span><span class="operator">,</span> <span class="number">7</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">9</span><span class="operator">,</span> <span class="number">6</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> </span><br><span class="line">  <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">8</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">9</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">10</span><span class="operator">,</span> <span class="number">7</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">9</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> </span><br><span class="line">  <span class="number">5</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">9</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">9</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> </span><br><span class="line">  <span class="number">5</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">8</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">9</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">6</span><span class="operator">,</span> <span class="number">7</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> </span><br><span class="line">  <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">9</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">9</span><span class="operator">,</span> <span class="number">6</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">10</span><span class="operator">,</span> <span class="number">7</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Sort</span><span class="punctuation">[</span><span class="variable">list</span><span class="operator">,</span> <span class="built_in">Function</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">list1</span><span class="operator">,</span> <span class="variable">list2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="variable">list1</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;</span> <span class="variable">list2</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">9</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> </span><br><span class="line">  <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">9</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">8</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">6</span><span class="operator">,</span> <span class="number">7</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> </span><br><span class="line">  <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">9</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">9</span><span class="operator">,</span> <span class="number">6</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">10</span><span class="operator">,</span> <span class="number">7</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="built_in">Sort</span><span class="punctuation">[</span><span class="variable">list</span><span class="operator">,</span> <span class="punctuation">(</span><span class="type">#1</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;</span> <span class="type">#2</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">||</span> <span class="punctuation">(</span><span class="type">#1</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">==</span> <span class="type">#2</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;&amp;</span> <span class="type">#1</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> <span class="type">#2</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">&amp;</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">9</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> </span><br><span class="line">  <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">9</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">8</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">5</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">6</span><span class="operator">,</span> <span class="number">7</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">8</span><span class="operator">,</span> </span><br><span class="line">  <span class="number">0</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">9</span><span class="operator">,</span> <span class="number">6</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">9</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">10</span><span class="operator">,</span> <span class="number">7</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">  </span><br><span class="line"><span class="variable">list</span> <span class="operator">=</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">4</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="built_in">Sort</span><span class="punctuation">[</span><span class="variable">list</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Ordering</span><span class="punctuation">[</span><span class="variable">list</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">list</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="built_in">Ordering</span><span class="punctuation">[</span><span class="variable">list</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">4</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="第三周"><a href="#第三周" class="headerlink" title="第三周"></a>第三周</h2><p>例：一种常用的提速技巧</p><p><code>Append</code>函数很慢，因为在表的最后插入数据，需要遍历整个表。</p><p>问题：找到不大于$n$的所有无平方因子的自然数</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">solution1</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">n</span><span class="operator">,</span> <span class="variable">L</span> <span class="operator">=</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="operator">;</span> </span><br><span class="line">   <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">,</span> <span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">SquareFreeQ</span><span class="punctuation">[</span><span class="variable">i</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">AppendTo</span><span class="punctuation">[</span><span class="variable">L</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="variable">n</span><span class="punctuation">]</span><span class="operator">;</span> <span class="variable">L</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">solution2</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">n</span><span class="operator">,</span> <span class="variable">L</span> <span class="operator">=</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="operator">;</span> </span><br><span class="line">   <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">,</span> <span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">SquareFreeQ</span><span class="punctuation">[</span><span class="variable">i</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">PrependTo</span><span class="punctuation">[</span><span class="variable">L</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="variable">n</span><span class="punctuation">]</span><span class="operator">;</span> </span><br><span class="line">   <span class="built_in">Reverse</span><span class="punctuation">[</span><span class="variable">L</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*嵌套表:Flatten*)</span></span><br><span class="line"><span class="variable">solution3</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">n</span><span class="operator">,</span> <span class="variable">L</span> <span class="operator">=</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="operator">;</span> </span><br><span class="line">   <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">,</span> <span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">SquareFreeQ</span><span class="punctuation">[</span><span class="variable">i</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">L</span> <span class="operator">=</span> <span class="punctuation">&#123;</span><span class="variable">L</span><span class="operator">,</span> <span class="variable">i</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="variable">n</span><span class="punctuation">]</span><span class="operator">;</span> </span><br><span class="line">   <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="variable">L</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*收获与播种*)</span></span><br><span class="line"><span class="variable">solution4</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">n</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Reap</span><span class="punctuation">[</span><span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">i</span><span class="operator">,</span> <span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">SquareFreeQ</span><span class="punctuation">[</span><span class="variable">i</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Sow</span><span class="punctuation">[</span><span class="variable">i</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">/@</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="variable">n</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">,</span> </span><br><span class="line">     <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Timing</span><span class="punctuation">[</span><span class="type">#</span><span class="punctuation">[</span><span class="number">50000</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="variable">solution1</span><span class="operator">,</span> <span class="variable">solution2</span><span class="operator">,</span> <span class="variable">solution3</span><span class="operator">,</span> </span><br><span class="line">  <span class="variable">solution4</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1.5625</span><span class="operator">,</span> <span class="number">1.34375</span><span class="operator">,</span> <span class="number">0.125</span><span class="operator">,</span> <span class="number">0.109375</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>但是Flatten函数也存在缺点，就是当我们搜索的结果中含有表时，会破坏我们搜索结果的结构，我们可以使用下面的方法解决：</p><p>求解<code>Pell</code>方程$x^2-2y^2=1$的满足$1\le y\le n$的解。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">solution5</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">n</span><span class="operator">,</span> <span class="variable">L</span> <span class="operator">=</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="operator">;</span> </span><br><span class="line">   <span class="built_in">Do</span><span class="punctuation">[</span><span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">IntegerQ</span><span class="punctuation">[</span><span class="variable">x</span> <span class="operator">=</span> <span class="built_in">Sqrt</span><span class="punctuation">[</span><span class="number">1</span> <span class="operator">+</span> <span class="number">2</span> <span class="variable">y</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">L</span> <span class="operator">=</span> <span class="punctuation">&#123;</span><span class="variable">L</span><span class="operator">,</span> <span class="variable">list</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">y</span> <span class="operator">,</span> </span><br><span class="line">     <span class="variable">n</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span> <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="variable">L</span><span class="punctuation">]</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="variable">list</span> <span class="operator">-&gt;</span> <span class="built_in">List</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><p>这里是用<code>list</code>代替<code>List</code>放置被压平，之后又还原。</p><p>但收获与播种不存在此类问题：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">solution6</span> <span class="operator">=</span> </span><br><span class="line"> <span class="built_in">Function</span><span class="punctuation">[</span><span class="variable">n</span><span class="operator">,</span> </span><br><span class="line">  <span class="built_in">Reap</span><span class="punctuation">[</span><span class="built_in">Do</span><span class="punctuation">[</span><span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">IntegerQ</span><span class="punctuation">[</span><span class="variable">x</span> <span class="operator">=</span> <span class="built_in">Sqrt</span><span class="punctuation">[</span><span class="number">1</span> <span class="operator">+</span> <span class="number">2</span> <span class="variable">y</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Sow</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">y</span><span class="operator">,</span> <span class="variable">n</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">,</span></span><br><span class="line">     <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>收获与播种是很有用的一种构造表的方法，它们还有更高级的用法：播种的时候可以给每个种子加标签，收获时可以按照标签或模式匹配进行收获。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Reap</span><span class="punctuation">[</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>张三<span class="operator">,</span> <span class="punctuation">&#123;</span>披萨<span class="operator">,</span> 可乐<span class="operator">,</span> 鸡翅<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>李四<span class="operator">,</span> <span class="punctuation">&#123;</span>意面<span class="operator">,</span> 可乐<span class="operator">,</span> 鸡翅<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>王五<span class="operator">,</span> <span class="punctuation">&#123;</span>披萨<span class="operator">,</span> 雪碧<span class="operator">,</span> 薯条<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>刘六<span class="operator">,</span> <span class="punctuation">&#123;</span>意面<span class="operator">,</span> 红茶<span class="operator">,</span> 沙拉<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>陈七<span class="operator">,</span> <span class="punctuation">&#123;</span>披萨<span class="operator">,</span> 可乐<span class="operator">,</span> 薯条<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>杨八<span class="operator">,</span> <span class="punctuation">&#123;</span>意面<span class="operator">,</span> 橙汁<span class="operator">,</span> 沙拉<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;,</span></span><br><span class="line"> 红茶</span><br><span class="line"> <span class="punctuation">]</span></span><br><span class="line"> <span class="operator">&gt;</span> <span class="built_in">Null</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span>刘六<span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"> </span><br><span class="line"> <span class="built_in">Reap</span><span class="punctuation">[</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>张三<span class="operator">,</span> <span class="punctuation">&#123;</span>披萨<span class="operator">,</span> 可乐<span class="operator">,</span> 鸡翅<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>李四<span class="operator">,</span> <span class="punctuation">&#123;</span>意面<span class="operator">,</span> 可乐<span class="operator">,</span> 鸡翅<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>王五<span class="operator">,</span> <span class="punctuation">&#123;</span>披萨<span class="operator">,</span> 雪碧<span class="operator">,</span> 薯条<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>刘六<span class="operator">,</span> <span class="punctuation">&#123;</span>意面<span class="operator">,</span> 红茶<span class="operator">,</span> 沙拉<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>陈七<span class="operator">,</span> <span class="punctuation">&#123;</span>披萨<span class="operator">,</span> 可乐<span class="operator">,</span> 薯条<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="built_in">Sow</span><span class="punctuation">[</span>杨八<span class="operator">,</span> <span class="punctuation">&#123;</span>意面<span class="operator">,</span> 橙汁<span class="operator">,</span> 沙拉<span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">;,</span></span><br><span class="line"> <span class="type">_</span><span class="operator">,</span> <span class="type">#1</span> <span class="operator">-&gt;</span> <span class="type">#2</span> <span class="operator">&amp;</span></span><br><span class="line"> <span class="punctuation">]</span></span><br><span class="line"> </span><br><span class="line"> <span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="built_in">Null</span><span class="operator">,</span> <span class="punctuation">&#123;</span>披萨 <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span>张三<span class="operator">,</span> 王五<span class="operator">,</span> 陈七<span class="punctuation">&#125;</span><span class="operator">,</span> 可乐 <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span>张三<span class="operator">,</span> 李四<span class="operator">,</span> 陈七<span class="punctuation">&#125;</span><span class="operator">,</span> 鸡翅 <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span>张三<span class="operator">,</span> 李四<span class="punctuation">&#125;</span><span class="operator">,</span> </span><br><span class="line">  意面 <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span>李四<span class="operator">,</span> 刘六<span class="operator">,</span> 杨八<span class="punctuation">&#125;</span><span class="operator">,</span> 雪碧 <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span>王五<span class="punctuation">&#125;</span><span class="operator">,</span> 薯条 <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span>王五<span class="operator">,</span> 陈七<span class="punctuation">&#125;</span><span class="operator">,</span> 红茶 <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span>刘六<span class="punctuation">&#125;</span><span class="operator">,</span> </span><br><span class="line">  沙拉 <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span>刘六<span class="operator">,</span> 杨八<span class="punctuation">&#125;</span><span class="operator">,</span> 橙汁 <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span>杨八<span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><code>,</code>后的表示模式匹配,<code>_</code>表示所有模式都可，而后面的为匿名函数。</p><h3 id="模式匹配"><a href="#模式匹配" class="headerlink" title="模式匹配"></a>模式匹配</h3><p>我们已经提过Mathematica的第二原理：计算即重写。重写分两步、分别是模式匹配和规则代入。我们先讲模式匹配。</p><p>所谓模式，是指满足一定条件的表达式构成的集合。而模式匹配，就是从给定的待计算表达式中搜索出符合某种模式（即输入这个集合）的子表达式。模式匹配完成之后，我们就可以对这些匹配出来的子表达式应用计算规则，从而达到计算或化简的目的。有些时候，我们的目标本身就是某种搜索结果，如果善用模式匹配，就可以写出非常高效的程序。</p><p>根据定义，单个表达式也可以认为是一种模式，它只包含一个表达式作为其元素，这在模式匹配的时候也是很常见的。不过这种模式太简单了，我们称之为平凡模式，我们后面讨论模式时一般总假设是非平凡的。</p><p>最简单的(非平凡)的模式是<code>_</code>，全名<code>Blank[]</code>，它代表一切表达式。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">FullForm</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="type">_</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">g</span><span class="punctuation">[</span><span class="type">_</span><span class="operator">,</span> <span class="type">_</span><span class="punctuation">]</span><span class="operator">,</span> <span class="type">_</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">]</span><span class="operator">,</span> <span class="type">_</span><span class="punctuation">[</span><span class="type">_</span><span class="operator">,</span> <span class="type">_</span><span class="operator">,</span> <span class="type">_</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span><span class="variable">g</span><span class="punctuation">[</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span><span class="variable">y</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">FullForm</span> <span class="operator">/@</span> <span class="punctuation">&#123;</span><span class="type">_</span> <span class="operator">+</span> <span class="type">_</span><span class="operator">,</span> <span class="type">_</span> <span class="operator">-</span> <span class="type">_</span><span class="operator">,</span> <span class="type">_</span><span class="operator">*_,</span> <span class="type">_</span><span class="operator">^_</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="built_in">Times</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span><span class="number">0</span><span class="operator">,</span><span class="built_in">Power</span><span class="punctuation">[</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">Power</span><span class="punctuation">[</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">a</span> <span class="operator">+</span> <span class="variable">b</span><span class="operator">,</span> <span class="type">_</span> <span class="operator">+</span> <span class="type">_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">a</span> <span class="operator">+</span> <span class="variable">a</span><span class="operator">,</span> <span class="type">_</span> <span class="operator">+</span> <span class="type">_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">a</span> <span class="operator">-</span> <span class="variable">b</span><span class="operator">,</span> <span class="type">_</span> <span class="operator">-</span> <span class="type">_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">a</span> <span class="operator">-</span> <span class="variable">a</span><span class="operator">,</span> <span class="type">_</span> <span class="operator">-</span> <span class="type">_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">*</span><span class="variable">b</span><span class="operator">,</span> <span class="type">_</span><span class="operator">*_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">*</span><span class="variable">a</span><span class="operator">,</span> <span class="type">_</span><span class="operator">*_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">/</span><span class="variable">b</span><span class="operator">,</span> <span class="type">_</span><span class="operator">/_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">/</span><span class="variable">a</span><span class="operator">,</span> <span class="type">_</span><span class="operator">/_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">g</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="punctuation">]</span><span class="operator">,</span> <span class="type">_</span><span class="punctuation">[</span><span class="type">_</span><span class="operator">,</span> <span class="type">_</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">False</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">False</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">False</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">False</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br></pre></td></tr></table></figure><p><code>+,-,/,*</code>为具体的二元运算，而<code>g</code>为抽象的二元运算，所以结果可能有所不同。</p><p>我们可以将匹配好的模式命名，其完整形式为Pattern[name, pattern]，简写形式有两种，分别对应于不同的优先级。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">FullForm</span><span class="punctuation">[</span><span class="type">x_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">FullForm</span><span class="punctuation">[</span><span class="variable">x</span> <span class="operator">:</span> <span class="type">_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">FullForm</span><span class="punctuation">[</span><span class="type">x_</span><span class="punctuation">[</span><span class="type">_</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">FullForm</span><span class="punctuation">[</span><span class="variable">x</span> <span class="operator">:</span> <span class="type">_</span><span class="punctuation">[</span><span class="type">_</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">Pattern</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">Pattern</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">Pattern</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">Pattern</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="built_in">Blank</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>如果在一个模式中，同一个命名模式出现了多次，它们会被认为是同样的。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">x_</span><span class="operator">,</span> <span class="type">x_</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">x_</span><span class="operator">,</span> <span class="type">x_</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">x_</span><span class="operator">,</span> <span class="type">y_</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">False</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br></pre></td></tr></table></figure><p>注意模式匹配是按Mathematica内部的FullForm匹配的，它总是基于结构的，而非基于数学的。例如当我们匹配<code>x^_</code>这个模式时，<code>x</code>本身并不会匹配到，尽管在数学上$x=x^1$。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">3</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">^</span><span class="type">n_</span> <span class="operator">:&gt;</span>  <span class="variable">p</span><span class="punctuation">[</span><span class="variable">n</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="number">1</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">p</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">p</span><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>为了解决这个问题，我们可以这样：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">3</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">^</span><span class="type">n_</span> <span class="operator">:&gt;</span>  <span class="variable">p</span><span class="punctuation">[</span><span class="variable">n</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">1</span> <span class="operator">-&gt;</span> <span class="variable">p</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">x</span> <span class="operator">-&gt;</span> <span class="variable">p</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">p</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">p</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">p</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">p</span><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>但是如果有涉及到带有交换性、结合性的函数，Mathematica也会变得聪明一些。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="variable">a</span> <span class="operator">+</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">b</span> <span class="operator">+</span> <span class="variable">c</span><span class="operator">,</span> <span class="built_in">Plus</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="built_in">Plus</span><span class="punctuation">[</span><span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="variable">b</span> <span class="operator">+</span> <span class="type">x_</span>  <span class="operator">:&gt;</span> <span class="variable">x</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">a</span> <span class="operator">+</span> <span class="variable">c</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这是因为Plus这个函数在Mathematica内部具有Flat和Orderless两种属性，分别对应于结合性和交换性。Mathematica在做模式匹配的时候会考虑这些属性导致的一些等价形式，如Plus[a,b] = Plus[b,a]，Plus[a,Plus[b,c]] = Plus[b, Plus[a,c]]等等。</p><p>我们可以用Cases函数来列出所匹配的东西，不指定深度只搜第一层：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="number">1</span> <span class="operator">+</span> <span class="variable">x</span> <span class="operator">+</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">3</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^_</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="number">1</span> <span class="operator">+</span> <span class="variable">x</span> <span class="operator">+</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">3</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^_,</span> <span class="built_in">Infinity</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">3</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Max</span><span class="punctuation">[</span><span class="built_in">Cases</span><span class="punctuation">[</span><span class="variable">a0</span> <span class="operator">+</span> <span class="variable">a1</span> <span class="variable">x</span> <span class="operator">+</span> <span class="variable">a2</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span> <span class="operator">+</span> <span class="variable">a3</span> <span class="variable">x</span><span class="operator">^</span><span class="number">3</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="type">n_</span> <span class="operator">:&gt;</span> <span class="variable">n</span><span class="operator">,</span> <span class="built_in">Infinity</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>可以用模式匹配模式：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">a</span> <span class="operator">-&gt;</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span> <span class="operator">-&gt;</span> <span class="variable">d</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="built_in">HoldPattern</span><span class="punctuation">[</span><span class="variable">a</span> <span class="operator">-&gt;</span> <span class="type">_</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">a</span> <span class="operator">-&gt;</span> <span class="variable">b</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>还可以用DeleteCases去掉被匹配到的东西。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">DeleteCases</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span> <span class="operator">+</span> <span class="variable">g</span><span class="punctuation">[</span><span class="variable">y</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">_</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">g</span><span class="punctuation">[</span><span class="variable">y</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">DeleteCases</span><span class="punctuation">[</span><span class="built_in">CoefficientList</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="number">1</span> <span class="operator">+</span> <span class="variable">x</span><span class="punctuation">)</span><span class="operator">^</span><span class="number">10</span> <span class="operator">+</span> <span class="punctuation">(</span><span class="number">1</span> <span class="operator">-</span> <span class="variable">x</span><span class="punctuation">)</span><span class="operator">^</span><span class="number">10</span><span class="operator">,</span> <span class="variable">x</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">90</span><span class="operator">,</span> <span class="number">420</span><span class="operator">,</span> <span class="number">420</span><span class="operator">,</span> <span class="number">90</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment">(*CoefficientList求多项式系数*)</span></span><br></pre></td></tr></table></figure><p>比简单匹配稍微复杂一点的是类型匹配，完整形式为Blank[head]：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2.5</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="type">_f</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2.5</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="type">_Symbol</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2.5</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="type">_Integer</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2.5</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="type">_Real</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">,</span><span class="variable">y</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">2.5</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>更复杂的是带条件的模式：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="type">_</span><span class="operator">?</span><span class="punctuation">(</span><span class="built_in">EvenQ</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="type">#</span> <span class="operator">+</span> <span class="type">#</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="type">_</span><span class="operator">?</span><span class="punctuation">(</span><span class="built_in">Not</span><span class="operator">@</span><span class="built_in">EvenQ</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="type">#</span> <span class="operator">+</span> <span class="type">#</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="built_in">Except</span><span class="punctuation">[</span><span class="type">_</span><span class="operator">?</span><span class="punctuation">(</span><span class="built_in">EvenQ</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="type">#</span> <span class="operator">+</span> <span class="type">#</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">Except</span><span class="punctuation">[</span><span class="type">_</span><span class="operator">?</span><span class="punctuation">(</span><span class="built_in">EvenQ</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="type">#</span> <span class="operator">+</span> <span class="type">#</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="operator">,</span> <span class="type">_</span><span class="operator">?</span><span class="built_in">NumberQ</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"> <span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="punctuation">&#125;</span></span><br><span class="line"> <span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span></span><br><span class="line"> <span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span></span><br><span class="line"> <span class="operator">&gt;</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><code>Except[c,p]</code>满足<code>p</code>但不满足<code>c</code>。</p><p>与命名类似，条件也有更低优先级的一种简写形式：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="type">_</span><span class="operator">?</span><span class="punctuation">(</span><span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="type">x_</span><span class="operator">,</span> <span class="type">y_</span><span class="punctuation">&#125;</span> <span class="operator">/;</span> <span class="variable">x</span> <span class="operator">&lt;</span> <span class="variable">y</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>运算符<code>/;</code>经常被用来定义分情况的函数，如著名的$3x+1$问题：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">f</span><span class="punctuation">[</span><span class="type">n_</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">n</span><span class="operator">/</span><span class="number">2</span> <span class="operator">/;</span> <span class="built_in">EvenQ</span><span class="punctuation">[</span><span class="variable">n</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">f</span><span class="punctuation">[</span><span class="type">n_</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="number">3</span> <span class="variable">n</span> <span class="operator">+</span> <span class="number">1</span> <span class="operator">/;</span> <span class="built_in">OddQ</span><span class="punctuation">[</span><span class="variable">n</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>如何定义双线性运算？</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">inner</span><span class="punctuation">[</span><span class="type">x1_</span> <span class="operator">+</span> <span class="type">x2_</span><span class="operator">,</span> <span class="type">x3_</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">inner</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span> <span class="operator">+</span> <span class="variable">inner</span><span class="punctuation">[</span><span class="variable">x2</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">inner</span><span class="punctuation">[</span><span class="type">x1_</span><span class="operator">,</span> <span class="type">x2_</span> <span class="operator">+</span> <span class="type">x3_</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">inner</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="punctuation">]</span> <span class="operator">+</span> <span class="variable">inner</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x3</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">inner</span><span class="punctuation">[</span><span class="type">a_</span><span class="operator">?</span><span class="built_in">NumberQ</span> <span class="type">x1_</span><span class="operator">,</span> <span class="type">x2_</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">a</span> <span class="variable">inner</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">inner</span><span class="punctuation">[</span><span class="type">x1_</span><span class="operator">,</span> <span class="type">a_</span><span class="operator">?</span><span class="built_in">NumberQ</span> <span class="type">x2_</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">a</span> <span class="variable">inner</span><span class="punctuation">[</span><span class="variable">x1</span><span class="operator">,</span> <span class="variable">x2</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="variable">inner</span><span class="punctuation">[</span><span class="number">3</span> <span class="variable">x</span> <span class="operator">+</span> <span class="number">2</span> <span class="variable">y</span><span class="operator">,</span> <span class="variable">z</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="number">3</span><span class="operator">/</span><span class="number">2</span> <span class="variable">inner</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">z</span><span class="punctuation">]</span> <span class="operator">+</span> <span class="variable">inner</span><span class="punctuation">[</span><span class="variable">y</span><span class="operator">,</span> <span class="variable">z</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>有时候我们需要对好几种情况做同一种规则代入，这时候就需要”或然匹配”，其形式为<code>p1|p2|p3</code>：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">/</span><span class="number">2</span><span class="operator">,</span> <span class="number">0.25</span><span class="operator">,</span> <span class="number">3</span> <span class="operator">+</span> <span class="number">4</span> <span class="built_in">I</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="type">_Rational</span> <span class="operator">-&gt;</span> <span class="number">0</span><span class="operator">,</span> <span class="type">_Real</span> <span class="operator">-&gt;</span> <span class="number">0</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">/</span><span class="number">2</span><span class="operator">,</span> <span class="number">0.25</span><span class="operator">,</span> <span class="number">3</span> <span class="operator">+</span> <span class="number">4</span> <span class="built_in">I</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="type">_Rational</span> <span class="operator">|</span> <span class="type">_Real</span> <span class="operator">-&gt;</span> <span class="number">0</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="built_in">Symbol</span> <span class="operator">/@</span> <span class="built_in">CharacterRange</span><span class="punctuation">[</span><span class="string">&quot;a&quot;</span><span class="operator">,</span> <span class="string">&quot;z&quot;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Except</span><span class="punctuation">[</span><span class="variable">a</span> <span class="operator">|</span> <span class="variable">e</span> <span class="operator">|</span> <span class="variable">i</span> <span class="operator">|</span> <span class="variable">o</span> <span class="operator">|</span> <span class="variable">u</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">3</span> <span class="operator">+</span> <span class="number">4</span> <span class="built_in">I</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">3</span> <span class="operator">+</span> <span class="number">4</span> <span class="built_in">I</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="operator">,</span> <span class="variable">f</span><span class="operator">,</span> <span class="variable">g</span><span class="operator">,</span> <span class="variable">h</span><span class="operator">,</span> <span class="variable">j</span><span class="operator">,</span> <span class="variable">k</span><span class="operator">,</span> <span class="variable">l</span><span class="operator">,</span> <span class="variable">m</span><span class="operator">,</span> <span class="variable">n</span><span class="operator">,</span> <span class="variable">p</span><span class="operator">,</span> <span class="variable">q</span><span class="operator">,</span> <span class="variable">r</span><span class="operator">,</span> <span class="variable">s</span><span class="operator">,</span> <span class="variable">t</span><span class="operator">,</span> <span class="variable">v</span><span class="operator">,</span> <span class="variable">w</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="operator">,</span> <span class="variable">z</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>之前模式匹配都是针对一个表达式的，模式匹配还可以对表达式序列进行。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">]</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="type">a__</span><span class="punctuation">]</span> <span class="operator">:&gt;</span> <span class="punctuation">&#123;</span><span class="variable">a</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">]</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="type">a___</span><span class="punctuation">]</span> <span class="operator">:&gt;</span> <span class="punctuation">&#123;</span><span class="variable">a</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>两个下划线对于空(0个表达式，对应于f[]无表达式)不匹配，三个下划线匹配空为空。</p><p>例子：判断表中元素是否都是素数。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">listPrimeQ</span><span class="punctuation">[</span><span class="type">list_</span><span class="punctuation">]</span> <span class="operator">:=</span> </span><br><span class="line"> <span class="built_in">Not</span><span class="operator">@</span><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="variable">list</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="type">___</span><span class="operator">,</span> <span class="type">_</span><span class="operator">?</span><span class="punctuation">(</span><span class="built_in">Not</span><span class="punctuation">[</span><span class="built_in">PrimeQ</span><span class="punctuation">[</span><span class="type">#</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="operator">,</span> <span class="type">___</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"> <span class="comment">(*前后两个___，表示前面有0个或多个表达式，中间的不能为素数*)</span></span><br><span class="line"><span class="variable">list</span> <span class="operator">=</span> <span class="built_in">Array</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">^</span><span class="number">2</span> <span class="operator">+</span> <span class="type">#</span> <span class="operator">+</span> <span class="number">41</span> <span class="operator">&amp;,</span> <span class="number">40</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">listPrimeQ</span><span class="punctuation">[</span><span class="variable">list</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">True</span></span><br></pre></td></tr></table></figure><p>用Longest和Shortest可以控制<code>__</code>和<code>___</code>的匹配长度：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="operator">,</span> <span class="variable">e</span><span class="operator">,</span> <span class="variable">f</span><span class="operator">,</span> <span class="variable">g</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="type">x__</span><span class="operator">,</span> <span class="type">y__</span><span class="operator">,</span> <span class="type">z__</span><span class="punctuation">&#125;</span> <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="variable">x</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">y</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">z</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="operator">,</span> <span class="variable">e</span><span class="operator">,</span> <span class="variable">f</span><span class="operator">,</span> <span class="variable">g</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="type">x__</span><span class="operator">,</span> <span class="built_in">Longest</span><span class="punctuation">[</span><span class="type">y__</span><span class="punctuation">]</span><span class="operator">,</span> <span class="type">z__</span><span class="punctuation">&#125;</span> <span class="operator">-&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="variable">x</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">y</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">z</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="variable">a</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">b</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="operator">,</span> <span class="variable">e</span><span class="operator">,</span> <span class="variable">f</span><span class="operator">,</span> <span class="variable">g</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="punctuation">&#123;</span><span class="variable">a</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">b</span><span class="operator">,</span> <span class="variable">c</span><span class="operator">,</span> <span class="variable">d</span><span class="operator">,</span> <span class="variable">e</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">g</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>重复模式：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span> <span class="operator">..</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="built_in">Repeated</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="built_in">Repeated</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">Cases</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="built_in">Repeated</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>模式序列：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span> <span class="operator">:</span> <span class="built_in">PatternSequence</span><span class="punctuation">[</span><span class="type">_</span><span class="operator">,</span> <span class="type">_</span><span class="punctuation">]</span><span class="operator">,</span> <span class="type">y___</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">p</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">x</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">y</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">p</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">p</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">3</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">5</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> </span><br><span class="line">  <span class="variable">b</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="type">___</span><span class="operator">,</span> <span class="variable">x</span> <span class="operator">:</span> <span class="built_in">Longest</span><span class="punctuation">[</span><span class="built_in">PatternSequence</span><span class="punctuation">[</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="punctuation">]</span> <span class="operator">..</span><span class="punctuation">]</span><span class="operator">,</span> <span class="type">___</span><span class="punctuation">&#125;</span> <span class="operator">:&gt;</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">,</span> <span class="variable">b</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>模式的默认值：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">plus</span><span class="punctuation">[</span><span class="type">x_</span><span class="operator">:</span> <span class="number">0</span><span class="operator">,</span> <span class="type">y_</span><span class="operator">:</span> <span class="number">0</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">x</span> <span class="operator">+</span> <span class="variable">y</span><span class="operator">;</span></span><br><span class="line"><span class="variable">plus</span><span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">plus</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">plus</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="punctuation">]</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="number">0</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">x</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="variable">x</span><span class="operator">+</span><span class="variable">y</span></span><br></pre></td></tr></table></figure><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">3</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">^</span><span class="type">n_</span> <span class="operator">:&gt;</span> <span class="variable">n</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">3</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="punctuation">&#123;</span><span class="variable">x</span><span class="operator">^</span><span class="type">n_</span><span class="operator">.</span> <span class="operator">:&gt;</span>  <span class="variable">n</span><span class="punctuation">&#125;</span><span class="comment">(*相当于把Power函数的默认值也考虑进去了*)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>字面模式：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">x_</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">y_</span><span class="punctuation">]</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">x_</span><span class="punctuation">]</span> <span class="operator">:&gt;</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">x_</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">y_</span><span class="punctuation">]</span><span class="punctuation">&#125;</span> <span class="operator">/.</span> <span class="variable">f</span><span class="punctuation">[</span><span class="built_in">Verbatim</span><span class="punctuation">[</span><span class="type">x_</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">:&gt;</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="number">4</span><span class="operator">,</span> <span class="variable">a</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="type">x_</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="type">y_</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="punctuation">&#123;</span><span class="variable">f</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="variable">a</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="variable">f</span><span class="punctuation">[</span><span class="type">y_</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fi0.hdslb.com%2Fbfs%2Farticle%2F7d065302ef2984abddb60152758c13bd66f74fba.jpg&amp;refer=http%3A%2F%2Fi0.hdslb.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=auto?sec=1659263087&amp;t=447b47f50cbb4d4d181ed18e4ac43cb5&quot; style=&quot;zoom: 100%;&quot; /&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt; B站课程链接：&lt;a href=&quot;https://www.bilibili.com/video/BV1av411N7Xi?spm_id_from=333.999.0.0&amp;amp;vd_source=6177c61c946280bb88c727585de76bc8&quot;&gt;https://www.bilibili.com/video/BV1av411N7Xi?spm_id_from=333.999.0.0&amp;amp;vd_source=6177c61c946280bb88c727585de76bc8&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="课程笔记" scheme="https://www.hfcouc.work/categories/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Mathematica" scheme="https://www.hfcouc.work/tags/Mathematica/"/>
    
    <category term="编程" scheme="https://www.hfcouc.work/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Statistical Rethinking:Chapter3</title>
    <link href="https://www.hfcouc.work/2022/06/29/rt3/"/>
    <id>https://www.hfcouc.work/2022/06/29/rt3/</id>
    <published>2022-06-29T06:55:16.000Z</published>
    <updated>2022-06-29T06:57:19.641Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Sampling-the-Imaginary"><a href="#Sampling-the-Imaginary" class="headerlink" title="Sampling the Imaginary"></a>Sampling the Imaginary</h2><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt3_1.png" alt=""></p><span id="more"></span><h3 id="Sampling-from-a-grid-approximate"><a href="#Sampling-from-a-grid-approximate" class="headerlink" title="Sampling from a grid-approximate"></a>Sampling from a grid-approximate</h3><p>我们先用第二章的例子生成后验分布：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p_grid &lt;- seq(from=<span class="number">0</span>, to=<span class="number">1</span>, length.out=<span class="number">1000</span>)</span><br><span class="line">prior &lt;- <span class="built_in">rep</span>(<span class="number">1</span>, <span class="number">1000</span>)</span><br><span class="line">likelihood &lt;- dbinom(<span class="number">6</span>, size = <span class="number">9</span>, prob = p_grid)</span><br><span class="line">posterior &lt;- likelihood * prior</span><br><span class="line">posterior &lt;- posterior / <span class="built_in">sum</span>(posterior)</span><br></pre></td></tr></table></figure><p>下面我们对后验进行抽样，抽取$10000$个样本：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sample</span></span><br><span class="line">samples &lt;- sample(p_grid, prob = posterior, size = <span class="number">1e4</span>, replace = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># plot(samples)</span></span><br><span class="line">dens(samples)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt3_2.jpeg" alt=""></p><h3 id="Sampling-to-summarize"><a href="#Sampling-to-summarize" class="headerlink" title="Sampling to summarize"></a>Sampling to summarize</h3><p>对样本进行总结主要包含以下几个方面：</p><ol><li>定义边界的区间</li><li>定义概率质量区间的问题</li><li>点估计的问题</li></ol><h4 id="Intervals-of-defined-boundaries"><a href="#Intervals-of-defined-boundaries" class="headerlink" title="Intervals of defined boundaries"></a>Intervals of defined boundaries</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add up posterior probability where p &lt; 0.5</span></span><br><span class="line"><span class="built_in">sum</span>(posterior[p_grid &lt; <span class="number">0.5</span>])</span><br><span class="line">&gt; <span class="number">0.1718746</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use samples</span></span><br><span class="line"><span class="built_in">sum</span>(samples &lt; <span class="number">0.5</span>) / <span class="number">1e4</span></span><br><span class="line">&gt; <span class="number">0.1731</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span>(samples &gt; <span class="number">0.5</span> &amp; samples &lt; <span class="number">0.75</span>) / <span class="number">1e4</span></span><br><span class="line">&gt; <span class="number">0.6037</span></span><br></pre></td></tr></table></figure><h4 id="Intervals-of-defined-mass"><a href="#Intervals-of-defined-mass" class="headerlink" title="Intervals of defined mass"></a>Intervals of defined mass</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">quantile(samples, <span class="number">0.8</span>)</span><br><span class="line">&gt;       <span class="number">80</span>% </span><br><span class="line">0.7597598 </span><br><span class="line"></span><br><span class="line">quantile(samples, c(0.1, 0.9))</span><br><span class="line">&gt;       10%       <span class="number">90</span>% </span><br><span class="line">0.4504505 0.8118118 </span><br></pre></td></tr></table></figure><p>我们也可以通过<code>PI</code>和<code>HDPI</code>（highest posterior density interval ）函数计算给定概率质量的区间：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">p_grid &lt;- seq( from=<span class="number">0</span> , to=<span class="number">1</span> , length.out=<span class="number">1000</span> )</span><br><span class="line">prior &lt;- <span class="built_in">rep</span>(<span class="number">1</span>,<span class="number">1000</span>)</span><br><span class="line">likelihood &lt;- dbinom( <span class="number">3</span> , size=<span class="number">3</span> , prob=p_grid ) </span><br><span class="line">posterior &lt;- likelihood * prior</span><br><span class="line">posterior &lt;- posterior / <span class="built_in">sum</span>(posterior)</span><br><span class="line">samples &lt;- sample( p_grid , size=<span class="number">1e4</span> , replace=<span class="literal">TRUE</span> , prob=posterior )</span><br><span class="line"><span class="comment"># center</span></span><br><span class="line">PI(samples, prob = <span class="number">0.5</span>)</span><br><span class="line">&gt;       <span class="number">25</span>%       75% </span><br><span class="line"><span class="number">0.7067067</span> <span class="number">0.9321822</span> </span><br><span class="line"></span><br><span class="line">HPDI(samples, prob = <span class="number">0.5</span>)</span><br><span class="line">&gt;   |<span class="number">0.5</span>      <span class="number">0.5</span>| </span><br><span class="line"><span class="number">0.8428428</span> <span class="number">0.9979980</span> </span><br></pre></td></tr></table></figure><p>一般情况下<code>PI</code>和<code>HDPI</code>的结果相差不大，但是当概率密度函数高度倾斜时其值会大不相同。</p><h4 id="Point-estimates"><a href="#Point-estimates" class="headerlink" title="Point estimates"></a>Point estimates</h4><p>最大后验估计：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p_grid[which.max(posterior)]</span><br><span class="line">&gt; <span class="number">1</span></span><br></pre></td></tr></table></figure><p>也可以根据样本来计算众数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chainmode(samples, adj=<span class="number">0.01</span>)</span><br><span class="line">&gt; <span class="number">0.9901787</span></span><br></pre></td></tr></table></figure><p>或是均值和中位数</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mean(samples)</span><br><span class="line">median(samples)</span><br><span class="line">&gt; <span class="number">0.8015405</span></span><br><span class="line">&gt; <span class="number">0.8448448</span></span><br></pre></td></tr></table></figure><p>那么描述后验估计用哪一个点呢？有时候我们采用损失函数还衡量点的好坏，但是损失函数的选择也会影响点的选择，如我们选择两个点之间距离的绝对值的差值作为损失函数，那么答案就是中位数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">loss &lt;- sapply(p_grid, <span class="keyword">function</span>(d) <span class="built_in">sum</span>(posterior*<span class="built_in">abs</span>(d-p_grid)))</span><br><span class="line">p_grid[which.min(loss)]</span><br><span class="line">&gt; <span class="number">0.8408408</span></span><br></pre></td></tr></table></figure><p>可以看到与中位数非常接近。</p><h3 id="Sampling-to-simulate-prediction"><a href="#Sampling-to-simulate-prediction" class="headerlink" title="Sampling to simulate prediction"></a>Sampling to simulate prediction</h3><h4 id="Dummy-data"><a href="#Dummy-data" class="headerlink" title="Dummy data"></a>Dummy data</h4><p>似然函数也可以用来产产生数据，例如我们之间的例子，我们的似然函数为：</p><script type="math/tex; mode=display">\Pr(w\mid n,p) = \frac{n!}{w!(n-w)!}p^w(1-p)^{n-w}</script><p>例如计算投掷两次，分别有$0,1,2$次是水的概率，$p=0.7$。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dbinom(<span class="number">0</span>:<span class="number">2</span>, size = <span class="number">2</span>, prob = <span class="number">0.7</span>)</span><br><span class="line">&gt; <span class="number">0.09</span> <span class="number">0.42</span> <span class="number">0.49</span></span><br></pre></td></tr></table></figure><p>产生数据：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rbinom(<span class="number">10</span>, size = <span class="number">2</span>, prob = <span class="number">0.7</span>)</span><br><span class="line">&gt; <span class="number">0</span> <span class="number">2</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>让我们以$p=0.7$的概率投掷$9$次产生$100000$个数据：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dummy_w &lt;- rbinom(<span class="number">1e5</span>, size = <span class="number">9</span>, prob = <span class="number">0.7</span>)</span><br><span class="line">simplehist(dummy_w, xlab = <span class="string">&quot;dummy water count&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt3_3.jpeg" alt=""></p><h4 id="Model-checking"><a href="#Model-checking" class="headerlink" title="Model checking"></a>Model checking</h4><p>现在我们的模型有两个不确定性，一个是$p$的不确定性，因为$p$存在一个后验分布，另一个是样本生成的不确定性，即使对于固定的$p$，样本的生成也是不确定的。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">w &lt;- rbinom(<span class="number">1e4</span>, size = <span class="number">9</span>, prob = samples)</span><br><span class="line">simplehist(w)</span><br></pre></td></tr></table></figure><p>相当于我们先从$p$的后验分布中采样$p$，之后根据采样得到的$p$生成数据，得到的就是$p$的<strong>后验预测分布</strong>。</p><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt3_4.jpeg" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Sampling-the-Imaginary&quot;&gt;&lt;a href=&quot;#Sampling-the-Imaginary&quot; class=&quot;headerlink&quot; title=&quot;Sampling the Imaginary&quot;&gt;&lt;/a&gt;Sampling the Imaginary&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/HFC666/image/master/img/rt3_1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="书籍阅读" scheme="https://www.hfcouc.work/categories/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="概率编程" scheme="https://www.hfcouc.work/tags/%E6%A6%82%E7%8E%87%E7%BC%96%E7%A8%8B/"/>
    
    <category term="贝叶斯统计" scheme="https://www.hfcouc.work/tags/%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BB%9F%E8%AE%A1/"/>
    
    <category term="Statistical Rethinking" scheme="https://www.hfcouc.work/tags/Statistical-Rethinking/"/>
    
  </entry>
  
  <entry>
    <title>Statistical Rethinking:Chapter2</title>
    <link href="https://www.hfcouc.work/2022/06/29/rt2/"/>
    <id>https://www.hfcouc.work/2022/06/29/rt2/</id>
    <published>2022-06-29T01:30:27.000Z</published>
    <updated>2022-06-29T01:33:09.911Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Small-Worlds-and-Large-Worlds"><a href="#Small-Worlds-and-Large-Worlds" class="headerlink" title="Small Worlds and Large Worlds"></a>Small Worlds and Large Worlds</h2><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt2_1.png" alt=""></p><p>当初麦哲伦进行环球航行的时候，错误地认为地球比实际要小，他认为地球的周长只有$30000$km而不是$40000$km。麦哲伦的大小世界提供了模型与现实的对比。小世界是模型自成一体的逻辑世界，在这个小世界里我们根据自己的认知对模型做出一系列假设并且能够验证模型的逻辑。假设小世界是对现实世界的准确描述，没有替代模型可以更好地利用数据中的信息并支持更好的决策。</p><p>大世界是现实世界，可能存在很多我们小世界中没有考虑的事件，模型是对现实世界的不完整表示。</p><span id="more"></span><h3 id="The-garden-of-forking-data"><a href="#The-garden-of-forking-data" class="headerlink" title="The garden of forking data"></a>The garden of forking data</h3><p>给定数据，能够用更多的方式产生数据的解释更可靠(概率更大)。</p><h4 id="Counting-possibilities"><a href="#Counting-possibilities" class="headerlink" title="Counting possibilities"></a>Counting possibilities</h4><p>考虑下面的例子，假设有个袋子里有$4$个球，球的颜色为蓝色和白色，我们有放回地取三个球，得到的结果为<strong>蓝白蓝</strong>。袋子里的球和对应于产生该结果的方式如下表所示：</p><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt2_2.jpg" alt=""></p><p>所以我们推测袋子里的球为第四种的可能性较大。</p><h4 id="Using-prior-information"><a href="#Using-prior-information" class="headerlink" title="Using prior information"></a>Using prior information</h4><p>我们也可以结合先验信息。假设我们又从袋子里抽出来一个球为蓝色，那么我们上面得到的结果就可以作为先验来进行推测，与现在的结果进行相乘，得到的结果如下图：</p><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt2_3.jpg" alt=""></p><blockquote><p>第一列每中假设为产生新数据的方式，第二列为之前的结果作为先验。</p></blockquote><h4 id="From-counts-to-probability"><a href="#From-counts-to-probability" class="headerlink" title="From counts to probability"></a>From counts to probability</h4><p>我们可以将之间的计算转为概率，还是之前的例子，变为：</p><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt2_4.jpg" alt=""></p><blockquote><p>$p$为蓝色的比例。</p></blockquote><p>计算方法为：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ways &lt;- <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">0</span>)</span><br><span class="line">ways/<span class="built_in">sum</span>(ways)</span><br><span class="line">&gt; <span class="number">0.00</span> <span class="number">0.15</span> <span class="number">0.40</span> <span class="number">0.45</span> <span class="number">0.00</span></span><br></pre></td></tr></table></figure><h3 id="Building-a-model"><a href="#Building-a-model" class="headerlink" title="Building a  model"></a>Building a  model</h3><p>假设我们要估计地球上海洋所占的比例，假设我们在地球上随机抽样得到的结果为<code>WLWWWLWLW</code>。我们利用上面提到的方法对其进行推断：</p><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt2_5.jpg" alt=""></p><h3 id="Components-of-the-model"><a href="#Components-of-the-model" class="headerlink" title="Components of the model"></a>Components of the model</h3><h4 id="Likelihood"><a href="#Likelihood" class="headerlink" title="Likelihood"></a>Likelihood</h4><p>首先是似然，似然指的是在给定参数情况下数据的合理性(发生的可能性)。</p><h4 id="Prior"><a href="#Prior" class="headerlink" title="Prior"></a>Prior</h4><p>对于我们想要贝叶斯估计的每个参数，我们需要为其提供先验。先验也为一个概率分布，可以是之前数据得到的参数的概率分布或是我们自己根据经验的概率分布。</p><h4 id="Posterior"><a href="#Posterior" class="headerlink" title="Posterior"></a>Posterior</h4><p>再有了先验和似然后我们就可以计算后验：</p><script type="math/tex; mode=display">\text { Posterior }=\frac{\text { Likelihood } \times \text { Prior }}{\text { Average Likelihood }}</script><h3 id="Making-the-model-go"><a href="#Making-the-model-go" class="headerlink" title="Making the model go"></a>Making the model go</h3><p>由于后验分布存在积分，我们有时无法直接对其进行计算，这时候就需要数值方法，我们主要介绍三种方法：</p><ol><li>网格近似</li><li>二次逼近</li><li>MCMC</li></ol><h4 id="Grid-approximation"><a href="#Grid-approximation" class="headerlink" title="Grid approximation"></a>Grid approximation</h4><p>最简单的调节技术之一是网格近似。虽然大多数参数是连续的，能够取无限数量的值，但事实证明，我们可以通过仅考虑参数值的有限网格来实现对连续后验分布的极好近似。</p><p>但是在大多数真实建模中，网格近似是不切实际的。原因是随着参数数量的增加，它的扩展性很差。所以在后面的章节中，网格近似将逐渐消失，取而代之的是其他更有效的技术。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># define grid</span></span><br><span class="line">p_grid &lt;- seq(from=<span class="number">0</span>, to=<span class="number">1</span>, length.out=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># define prior</span></span><br><span class="line">prior = <span class="built_in">rep</span>(<span class="number">1</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># compute likelihood at each value in grid</span></span><br><span class="line">likelihood &lt;- dbinom(<span class="number">6</span>, size = <span class="number">9</span>, prob = p_grid)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># compute product of likelihood and prior</span></span><br><span class="line">unstd.posterior &lt;- likelihood * prior</span><br><span class="line"></span><br><span class="line"><span class="comment"># standardize the posterior, so it sums to 1</span></span><br><span class="line">posterior &lt;- unstd.posterior / <span class="built_in">sum</span>(unstd.posterior)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(p_grid, posterior, type = <span class="string">&quot;b&quot;</span>, xlab = <span class="string">&quot;probability of water&quot;</span>, ylab = <span class="string">&quot;posterior probability&quot;</span>)</span><br><span class="line">mtext(<span class="string">&quot;20 points&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt2_6.jpeg" alt=""></p><h4 id="Quadratic-approximation"><a href="#Quadratic-approximation" class="headerlink" title="Quadratic approximation"></a>Quadratic approximation</h4><p>在一般的条件下，后验分布峰值附近的区域在形状上将接近高斯或正态分布。这意味着后验分布可以有用地近似为高斯分布。高斯分布很方便，因为它可以完全用两个数字来描述：中心的位置（均值）和分布（方差）。该方法分为两个步骤：</p><ol><li>找到后验分布的众数</li><li>一旦找到后验的峰值，就必须估计峰值附近的曲率。该曲率足以计算整个后验分布的二次近似</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">library(rethinking)</span><br><span class="line">globe.qa &lt;- map(</span><br><span class="line">  alist(</span><br><span class="line">    w ~ dbinom(<span class="number">9</span>, p), <span class="comment">#likelihood</span></span><br><span class="line">    p ~ dunif(<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">  ),</span><br><span class="line">  data = <span class="built_in">list</span>(w=<span class="number">6</span>)</span><br><span class="line">)</span><br><span class="line"><span class="comment"># display summary of quadratic approximation</span></span><br><span class="line">precis(globe.qa)</span><br><span class="line">&gt;  mean   sd <span class="number">5.5</span>% 94.5%</span><br><span class="line">p <span class="number">0.67</span> <span class="number">0.16</span> <span class="number">0.42</span>  <span class="number">0.92</span></span><br></pre></td></tr></table></figure><p>我们与真实的后验进行比较：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># analytical calculation</span></span><br><span class="line">w &lt;- 6</span><br><span class="line">n &lt;- 9</span><br><span class="line">curve(dbeta(x, w+<span class="number">1</span>, n-w+<span class="number">1</span>), from = <span class="number">0</span>, to=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># quadratic approximation</span></span><br><span class="line">curve(dnorm(x, <span class="number">0.67</span>, <span class="number">0.16</span>), lty=<span class="number">2</span>, add = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt2_7.jpeg" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Small-Worlds-and-Large-Worlds&quot;&gt;&lt;a href=&quot;#Small-Worlds-and-Large-Worlds&quot; class=&quot;headerlink&quot; title=&quot;Small Worlds and Large Worlds&quot;&gt;&lt;/a&gt;Small Worlds and Large Worlds&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/HFC666/image/master/img/rt2_1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;当初麦哲伦进行环球航行的时候，错误地认为地球比实际要小，他认为地球的周长只有$30000$km而不是$40000$km。麦哲伦的大小世界提供了模型与现实的对比。小世界是模型自成一体的逻辑世界，在这个小世界里我们根据自己的认知对模型做出一系列假设并且能够验证模型的逻辑。假设小世界是对现实世界的准确描述，没有替代模型可以更好地利用数据中的信息并支持更好的决策。&lt;/p&gt;
&lt;p&gt;大世界是现实世界，可能存在很多我们小世界中没有考虑的事件，模型是对现实世界的不完整表示。&lt;/p&gt;</summary>
    
    
    
    <category term="书籍阅读" scheme="https://www.hfcouc.work/categories/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="概率编程" scheme="https://www.hfcouc.work/tags/%E6%A6%82%E7%8E%87%E7%BC%96%E7%A8%8B/"/>
    
    <category term="贝叶斯统计" scheme="https://www.hfcouc.work/tags/%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BB%9F%E8%AE%A1/"/>
    
    <category term="Statistical Rethinking" scheme="https://www.hfcouc.work/tags/Statistical-Rethinking/"/>
    
  </entry>
  
  <entry>
    <title>Statistical Rethinking:Chapter1</title>
    <link href="https://www.hfcouc.work/2022/06/28/rt1/"/>
    <id>https://www.hfcouc.work/2022/06/28/rt1/</id>
    <published>2022-06-28T09:47:59.000Z</published>
    <updated>2022-06-29T01:30:33.136Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="The-Golem-of-Prague"><a href="#The-Golem-of-Prague" class="headerlink" title="The Golem of Prague"></a>The Golem of Prague</h2><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt1_1.png" alt=""></p><p><code>golem</code>为魔像，为一个非常强大的机器人，但是它只会听从人的命令，没有自主思考的能力。因此人类必须给他设置非常具体的命令，否则可能会对人类造成伤害。</p><span id="more"></span><h3 id="Statistical-golems"><a href="#Statistical-golems" class="headerlink" title="Statistical golems"></a>Statistical golems</h3><p>统计家也制造魔像。</p><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt1_2.jpg" alt=""></p><blockquote><p>统计家制造的魔像，非常强大，但也同样需要人类的指导。缺乏灵活性，在需要创造性的区域无法应用。</p></blockquote><h3 id="Statistical-rethinking"><a href="#Statistical-rethinking" class="headerlink" title="Statistical rethinking"></a>Statistical rethinking</h3><p>很多人认为统计推断的目标是检验无效假设。但这是不正确的，我们有以下两个理由：</p><ol><li>假设不是模型。假设和不同种类的模型之间的关系是复杂的。许多模型对应同一个假设，许多假设对应一个模型。这使得严格的证伪变得不可能。</li><li>测量很重要。即使我们认为数据证伪了模型，另一位观察者也会争论我们的方法和措施。他们不相信数据。有时他们是对的。</li></ol><h4 id="Hypotheses-are-not-models"><a href="#Hypotheses-are-not-models" class="headerlink" title="Hypotheses are not models"></a>Hypotheses are not models</h4><p>当我们试图证伪一个假设时，我们必须使用某种模型，但是我们不能仅仅通过一个模型来证明假设是错误的。</p><p>我们看一个关于进化的例子，有人认为进化是中性的，而有人不这么认为，所有存在两个假设。同一个假设可能导致不同的过程的模型，而同一个过程模型会引出不同的统计模型，同一个统计模型也可能对应于不同的过程模型和假设，因此证伪非常复杂。</p><p><img src="https://raw.githubusercontent.com/HFC666/image/master/img/rt1_3.jpg" alt=""></p><h4 id="Measurement-matters"><a href="#Measurement-matters" class="headerlink" title="Measurement matters"></a>Measurement matters</h4><p>首先观测是存在误差的，而且有的测量非常复杂容易出现误差。</p><p>其次假设并不一定是离散的，现实生活中的很多假设都是连续的，例如$80\%$的天鹅都是白色的，对我们证伪来说非常困难。</p><h3 id="Three-tools-for-golem-engineering"><a href="#Three-tools-for-golem-engineering" class="headerlink" title="Three tools for golem engineering"></a>Three tools for golem engineering</h3><h4 id="Bayesian-data-analysis"><a href="#Bayesian-data-analysis" class="headerlink" title="Bayesian data analysis"></a>Bayesian data analysis</h4><p>贝叶斯统计用随机型来描述不确定性，更详细的将在第二章讲述。</p><h4 id="Multilevel-models"><a href="#Multilevel-models" class="headerlink" title="Multilevel models"></a>Multilevel models</h4><p>使用多级模型有四个典型且互补的原因：</p><ol><li>调整重复抽样的估计值。当不止一个观察来自同一个人、地点或时间时，传统的单级模型可能会误导我们。</li><li>调整抽样不平衡的估计值。当某些个体、地点或时间的采样次数多于其他人时，我们也可能会被单级模型误导。</li><li>研究变异。如果我们的研究问题包括数据中个人或其他群体之间的变化，那么多层次模型将有很大帮助，因为它们明确地模拟了变化。</li><li>避免平均。学者们经常对一些数据进行预平均，以构建用于回归分析的变量。这可能很危险，因为平均会消除变化。因此，它制造了虚假的信念。多级模型允许我们保留原始预平均值中的不确定性，同时仍使用平均值进行预测。</li></ol><h4 id="Model-comparison-and-information-criteria"><a href="#Model-comparison-and-information-criteria" class="headerlink" title="Model comparison and information criteria"></a>Model comparison and information criteria</h4><p>最著名的信息准则是 AIC，即 Akaike (ah-kah-ee-kay) 信息准则。AIC 及其同类被称为“信息”标准，因为它们从信息论中发展出对模型准确性的度量。我们可以用起来比较模型的好坏。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;The-Golem-of-Prague&quot;&gt;&lt;a href=&quot;#The-Golem-of-Prague&quot; class=&quot;headerlink&quot; title=&quot;The Golem of Prague&quot;&gt;&lt;/a&gt;The Golem of Prague&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/HFC666/image/master/img/rt1_1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;golem&lt;/code&gt;为魔像，为一个非常强大的机器人，但是它只会听从人的命令，没有自主思考的能力。因此人类必须给他设置非常具体的命令，否则可能会对人类造成伤害。&lt;/p&gt;</summary>
    
    
    
    <category term="书籍阅读" scheme="https://www.hfcouc.work/categories/%E4%B9%A6%E7%B1%8D%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="概率编程" scheme="https://www.hfcouc.work/tags/%E6%A6%82%E7%8E%87%E7%BC%96%E7%A8%8B/"/>
    
    <category term="贝叶斯统计" scheme="https://www.hfcouc.work/tags/%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BB%9F%E8%AE%A1/"/>
    
    <category term="Statistical Rethinking" scheme="https://www.hfcouc.work/tags/Statistical-Rethinking/"/>
    
  </entry>
  
  <entry>
    <title>Turing:a language for flexible probabilistic inference</title>
    <link href="https://www.hfcouc.work/2022/06/28/Turing/"/>
    <id>https://www.hfcouc.work/2022/06/28/Turing/</id>
    <published>2022-06-28T02:32:40.000Z</published>
    <updated>2022-06-28T02:40:23.041Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Turing-a-language-for-flexible-probabilistic-inference"><a href="#Turing-a-language-for-flexible-probabilistic-inference" class="headerlink" title="Turing: a language for flexible probabilistic inference"></a>Turing: a language for flexible probabilistic inference</h2><blockquote><p>文章链接：<a href="http://proceedings.mlr.press/v84/ge18b.html?ref=https://githubhelp.com">http://proceedings.mlr.press/v84/ge18b.html?ref=https://githubhelp.com</a></p></blockquote><p><img src="http://static01.imgkr.com/temp/9ce5f3b2581549b8b89e6c9cdf7ebea5.png" alt=""></p><span id="more"></span><h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>在概率模型中，我们关注的一般是$p(\theta\mid y,\gamma)$，其中$\theta$为参数，$y$为观测数据，$\gamma$为一些确定了的超参数。</p><h4 id="Models-as-computer-programs"><a href="#Models-as-computer-programs" class="headerlink" title="Models as computer programs"></a>Models as computer programs</h4><p>最早的概率编程语言为BUGS，可以追溯到20世纪90年代。下面展示了概率程序的一般结构。</p><p>输入：数据$y$和超参数$\gamma$</p><p>步骤1：定义全局参数：</p><script type="math/tex; mode=display">\theta^{\text{global}}\sim p(\cdot\mid \gamma)</script><p>步骤2：对于每一个观测$y_n$，定义(局部)隐变量并计算似然：</p><script type="math/tex; mode=display">\begin{aligned}\theta_n^{\text{local}}&\sim p\left(\cdot\mid\theta_{1:n-1}^{\text{local}},\theta^{\text{global}},\gamma\right)\\y_n&\sim p\left(\cdot\mid \theta_{1:n}^{\text{local}},\theta^{\text{global}},\gamma\right)\end{aligned}</script><p>其中$n=1,2,\cdots,N$。</p><p>参数分为两类：$\theta_n^{\text{local}}$表示对于观测$y_n$的模型参数，如混合高斯模型中$y_n$属于哪个高斯分布的参数，而$\theta^{\text{global}}$表示全局变量。</p><h4 id="Inference-for-probabilistic-programs"><a href="#Inference-for-probabilistic-programs" class="headerlink" title="Inference for probabilistic programs"></a>Inference for probabilistic programs</h4><p>概率程序只有在与高效的推理引擎相结合时才能发挥其灵活性潜力。为了解释概率编程中推理如何工作，我们考虑以下具有$K$个状态的HMM例子：</p><script type="math/tex; mode=display">\begin{aligned}\pi_k&\sim \text{Dir}(\theta)\\\phi_k&\sim p(\gamma)\\z_t\mid z_{t-1}&\sim \text{Cat}(\cdot\mid \pi_{z_{t-1}})\\y_t\mid z_t&\sim h(\cdot\mid \phi_{z_t})\end{aligned}</script><p>其中$k = 1,2,\cdots,K$，$t = 1,\cdots,N$。</p><p>具有以下三个步骤的高效 Gibbs 采样器通常用于贝叶斯推理：</p><ul><li>Step 1: Sample $z_{1: T} \sim z_{1: T} \mid \phi_{1: K}, \pi_{1: K}, y_{1: T} ;$</li><li>Step 2: Sample $\phi_{k} \sim \phi_{k} \mid z_{1: T}, y_{1: T}, \gamma$;</li><li>Step 3: Sample $\pi_{k} \sim \pi_{k} \mid z_{1: T}, \theta(k=1, \ldots, K)$.</li></ul><h4 id="Computation-graph-based-inference"><a href="#Computation-graph-based-inference" class="headerlink" title="Computation graph based inference"></a>Computation graph based inference</h4><p>对概率程序进行建模的一大挑战是构建模型变量之间的计算图。对于一些编程语言，在推理之前概率图模型就已经生成，但是当程序中存在随机分支时就会出现问题，在这种情况下，我们不得不求助于其他推理方法。</p><h3 id="Composable-MCMC-inference"><a href="#Composable-MCMC-inference" class="headerlink" title="Composable MCMC inference"></a>Composable MCMC inference</h3><p>我们提出的可组合推理方法利用了HMC算法和粒子吉布斯(PG)算法。为了描述所提出的概率程序方法，我们利用潜在狄利克雷分配(LDA)的例子。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@model</span> lda(K ,M, N, w, d, beta, alpha) = <span class="keyword">begin</span></span><br><span class="line">    theta = <span class="built_in">Vector</span>&#123;<span class="built_in">Vector</span>&#123;<span class="built_in">Real</span>&#125;&#125;(M)</span><br><span class="line">    <span class="keyword">for</span> m = <span class="number">1</span>:M</span><br><span class="line">        theta[m] ~ Dirichlet(alpha)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    phi = <span class="built_in">Vector</span>&#123;<span class="built_in">Vector</span>&#123;<span class="built_in">Real</span>&#125;&#125;(K)</span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span>:K</span><br><span class="line">        phi[k] ~ Dirichlet(beta)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    z = tzeros(<span class="built_in">Int</span>, N)</span><br><span class="line">    <span class="keyword">for</span> n = <span class="number">1</span>:N</span><br><span class="line">        z[n] ~ Categorical(theta[d[n]])</span><br><span class="line">        w[n] ~ Categorical(phi[z[n]])</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>其中变量$\phi,\theta,z$表示模型参数，变量$K,M,N,d,\beta,\alpha$表示超参数，$w$表示观测数据。</p><p>一旦定义了模型，提供数据和执行推理就很直观了。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = lda(K, V, M, N, w, d, beta, alpha)</span><br><span class="line">sample(model, engine)</span><br></pre></td></tr></table></figure><p><code>engine</code>是我们想要使用的MCMC引擎。例如，如果要应用例子吉布斯采样，我们可以：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spl = PG(n, m)</span><br><span class="line">sample(model, spl)</span><br></pre></td></tr></table></figure><p>这将会用含有$m$个粒子的PG进行$n$次迭代。</p><p>我们也可以对不同的参数采用不同的采样器：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spl2 = Gibbs(<span class="number">1000</span>, PG(<span class="number">10</span>,<span class="number">2</span>,:z), HMC(<span class="number">2</span>, <span class="number">0.1</span>, <span class="number">1</span>, <span class="number">5</span>, :phi,:theta))</span><br></pre></td></tr></table></figure><p>上述采样引擎<code>spl2</code>将参数分割为两部分，每个部分采用不同的采样方法，值得注意的是，分布的两个部分不需要是互斥的。</p><h4 id="A-family-of-MCMC-operators"><a href="#A-family-of-MCMC-operators" class="headerlink" title="A family of MCMC operators"></a>A family of MCMC operators</h4><p><img src="http://static01.imgkr.com/temp/679a0f1dc05a4456ae7ee80183c63582.jpg" alt=""></p><blockquote><p>Supported Monte Carlo algorithms in Turing</p></blockquote><h3 id="Implementation-and-Experiments"><a href="#Implementation-and-Experiments" class="headerlink" title="Implementation and Experiments"></a>Implementation and Experiments</h3><h4 id="The-Turing-library"><a href="#The-Turing-library" class="headerlink" title="The Turing library"></a>The Turing library</h4><p>Turing为Julia的一个包。因为Turing为一般的Julia程序，因此它可以利用Julia中丰富的数值和统计库。</p><h5 id="Efficient-particle-Gibbs-implementation"><a href="#Efficient-particle-Gibbs-implementation" class="headerlink" title="Efficient particle Gibbs implementation"></a>Efficient particle Gibbs implementation</h5><p>我们使用协程来实现粒子 Gibbs。协程可以看作是函数的泛化，具有可以在多个点暂停和恢复的特性。</p><h5 id="Automatic-differentiation"><a href="#Automatic-differentiation" class="headerlink" title="Automatic differentiation"></a>Automatic differentiation</h5><p>HMC在采样的过程需要梯度，当给定定义$\log p(\theta\mid z_{1:N},\gamma)$的计算程序时，这些梯度可以通过自动微分(AD)自动获得。为了简便和高效，我们率先使用了一种称为向量模式的前向微分技术。向量模式前向微分背后的主要概念是多维对偶数，其在标量函数上的行为定义为：</p><script type="math/tex; mode=display">f\left(\theta+\sum_{i=1}^D y_i\epsilon_i\right) = f(\theta) + f^{\prime}(\theta)\sum_{i=1}^Dy_i\epsilon_i</script><p>其中$\epsilon_i\epsilon_j=0,\text{for }i\neq j$。</p><p>对于小模型，向量前向AD非常高效。但是对于大模型逆向模式的AD较为高效，因此Turing两种模式都存在。</p><h5 id="Vectorized-random-variables"><a href="#Vectorized-random-variables" class="headerlink" title="Vectorized random variables"></a>Vectorized random variables</h5><p>Turing支持利用以下语法对独立同分布的变量进行矢量化采样：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rv = <span class="built_in">Vector</span>(<span class="number">10</span>)</span><br><span class="line">rv ~ [Normal(<span class="number">0</span>, <span class="number">1</span>)]</span><br></pre></td></tr></table></figure><h5 id="Constrained-random-variables"><a href="#Constrained-random-variables" class="headerlink" title="Constrained random variables"></a>Constrained random variables</h5><p>Turing支持约束的变量。主要由三种类型的约束：</p><ol><li>有界的单变量。</li><li>有简单约束的多维变量，如相加和为$1$。</li><li>矩阵约束：例如协方差矩阵为半正定矩阵。</li></ol><h5 id="MCMC-output-analysis"><a href="#MCMC-output-analysis" class="headerlink" title="MCMC output analysis"></a>MCMC output analysis</h5><p>在Turing中我们可以使用<code>describe</code>函数计算：</p><ol><li>均值</li><li>标准差</li><li>naive standard error</li><li>蒙特卡洛标准误差</li><li>有效样本数</li><li>分位数</li></ol><p>也可以使用<code>hpd</code>函数计算高后验概率区间，互相关<code>cor</code>，自相关<code>autocor</code>，状态空间变化率<code>changerate</code>和偏差信息准则<code>dic</code>等等。</p><h4 id="Finding-the-right-inference-engine"><a href="#Finding-the-right-inference-engine" class="headerlink" title="Finding the right inference engine"></a>Finding the right inference engine</h4><p>下面我们将比较<code>NUTS</code>和<code>Gibbs(PG,HMC)</code>在不同的概率模型上。</p><h5 id="Models-and-inference-engine-setup"><a href="#Models-and-inference-engine-setup" class="headerlink" title="Models and inference engine setup"></a>Models and inference engine setup</h5><p><strong>Stochastic Volatility Model</strong>：参数的集合为$\{\phi,\sigma,\mu,h_{1:N}\}$。所有这些参数对于目标分布来说都是可导的，因此NUTS算法是可用的：</p><script type="math/tex; mode=display">\begin{aligned}\mu &\sim \mathcal{C} \mathrm{a}(0,10)), \phi \sim \mathcal{U} \mathrm{n}(-1,1), \sigma \sim \mathcal{C} \mathrm{a}(0,5), \quad(\sigma>0) \\h_{1} & \sim \mathcal{N}\left(\mu, \sigma / \sqrt{1-\phi^{2}}\right), h_{n} \sim \mathcal{N}\left(\mu+\phi\left(h_{n-1}-\mu\right), \sigma\right) \\y_{n} & \sim \mathcal{N}\left(0, \exp \left(h_{n} / 2\right)\right) \quad(n=2,3, \ldots, N) .\end{aligned}</script><p>其中$\mathcal{C}\mathrm{a}$表示柯西分布。</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spl1 = NUTS(<span class="number">1e4</span>, <span class="number">1e3</span>, <span class="number">0.65</span>)</span><br><span class="line">spl2 = Gibbs(<span class="number">1e4</span>, PG(<span class="number">5</span>, <span class="number">1</span>, :h), NUTS(<span class="number">1</span>, <span class="number">1e3</span>, <span class="number">0.65</span>, :mu, :phi, :sigma))</span><br></pre></td></tr></table></figure><p><strong>Gaussian Mixture Model</strong>：参数的集合为$\{z,\theta\}$，其中参数$\theta$是可导的，参数$z$不可以。为了运行NUTS算法，我们积分积掉$z$只对$\theta$采样：</p><script type="math/tex; mode=display">\begin{array}{r}\mu=\left(\mu_{1: K}\right), \quad \sigma=\left(\sigma_{1: K}\right), \quad \pi=\left(p_{1: K}\right) \\z \sim \operatorname{Cat}(\pi), \quad \theta \sim \mathcal{N}\left(\mu_{z}, \sigma_{z}\right)\end{array}</script><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spl3 = NUTS(<span class="number">5e4</span>, <span class="number">1000</span>, <span class="number">0.65</span>)</span><br><span class="line">spl4 = Gibbs(<span class="number">5e4</span>, PG(<span class="number">5</span>, <span class="number">1</span>, :z), NUTS(<span class="number">5e2</span>, <span class="number">1e3</span>, <span class="number">0.65</span>, :theta))</span><br></pre></td></tr></table></figure><h5 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h5><p><img src="http://static01.imgkr.com/temp/99d803e553514e089858f61d913babd1.jpg" alt=""></p><blockquote><p>上图为在GMM模型上trace plot，下图为联合分布的概率的对数的图，可以看到两个算法都达到了收敛，但是NUTS算法在某些对方被”困住了”。在下图更明显。</p></blockquote><p><img src="http://static01.imgkr.com/temp/095ae7d0d5a54a33960b6cd2162133bc.jpg" alt=""></p><blockquote><p>对具有$5$个混合的GMM采样的结果，可以更明显地看到NUTS算法被困住了，在图的上半部分只探索到了两个混合成分。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Turing-a-language-for-flexible-probabilistic-inference&quot;&gt;&lt;a href=&quot;#Turing-a-language-for-flexible-probabilistic-inference&quot; class=&quot;headerlink&quot; title=&quot;Turing: a language for flexible probabilistic inference&quot;&gt;&lt;/a&gt;Turing: a language for flexible probabilistic inference&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;文章链接：&lt;a href=&quot;http://proceedings.mlr.press/v84/ge18b.html?ref=https://githubhelp.com&quot;&gt;http://proceedings.mlr.press/v84/ge18b.html?ref=https://githubhelp.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://static01.imgkr.com/temp/9ce5f3b2581549b8b89e6c9cdf7ebea5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="文献阅读" scheme="https://www.hfcouc.work/categories/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="概率编程" scheme="https://www.hfcouc.work/tags/%E6%A6%82%E7%8E%87%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Julia" scheme="https://www.hfcouc.work/tags/Julia/"/>
    
  </entry>
  
  <entry>
    <title>文章A Conceptual Introduction to Hamiltonian Monte Carlo阅读笔记</title>
    <link href="https://www.hfcouc.work/2022/06/22/HMC/"/>
    <id>https://www.hfcouc.work/2022/06/22/HMC/</id>
    <published>2022-06-22T09:51:00.000Z</published>
    <updated>2022-06-28T02:34:43.829Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="A-Conceptual-Introduction-to-Hamiltonian-Monte-Carlo"><a href="#A-Conceptual-Introduction-to-Hamiltonian-Monte-Carlo" class="headerlink" title="A Conceptual Introduction to Hamiltonian Monte Carlo"></a>A Conceptual Introduction to Hamiltonian Monte Carlo</h2><blockquote><p>文章链接：<a href="https://arxiv.org/abs/1701.02434">https://arxiv.org/abs/1701.02434</a></p></blockquote><p><img src="http://static01.imgkr.com/temp/8a010064bcee4b0eac9e9c05caa3f1ee.png" alt=""></p><span id="more"></span><h3 id="期望的计算"><a href="#期望的计算" class="headerlink" title="期望的计算"></a>期望的计算</h3><p>对于给定函数$f(q)$，我们在给定的$q$的分布$\pi (q)$上计算其期望：</p><script type="math/tex; mode=display">\mathbb{E}_{\pi}[f] = \int_{\mathcal{Q}}\pi(q)f(q)dq</script><p>一般情况下此积分的原函数得不到，因此我们采用蒙特卡洛的方法，在$\pi(q)$上对$q$进行采样，用下式计算期望：</p><script type="math/tex; mode=display">\mathbb{E}_{\pi}[f]\approx \frac{1}{n}\sum_{i=1}^n f(q_i)\quad q_i\sim \pi(q)</script><p>但是我们如何在$\pi(q)$上进行采样呢？为了节省时间，我们一般选择在概率密度较高的位置进行采样，即在概率密度最高的邻域内进行采样。但是在高维情况下存在问题，假设我们在概率密度最高的$1/3$邻域内进行采样，当维度为$n$时，积分区域的体积为$(1/3)^n$，当$n$很大时趋近于$0$，因此对积分的贡献很小。而概率密度较小的地方由于概率密度趋近于$0$，对积分的贡献也不大。我们着重关注的应该是介于两者之间的区域，其对积分的贡献较大，成为典型集(typical set)。我们研究的重点在于如何在<strong>典型集上采样</strong>。</p><h3 id="马尔可夫链蒙特卡洛方法"><a href="#马尔可夫链蒙特卡洛方法" class="headerlink" title="马尔可夫链蒙特卡洛方法"></a>马尔可夫链蒙特卡洛方法</h3><h4 id="理想状态"><a href="#理想状态" class="headerlink" title="理想状态"></a>理想状态</h4><p>利用马尔可夫链蒙特卡洛(MCMC)方法可以在典型集上进行采样。在理想状态下，MCMC的采样过程可以分为三个阶段：</p><ol><li>从初始位置到典型集，此时偏差(bias)较大。</li><li>进入典型集后，在典型集上进行探索，准确度迅速上升。</li><li>继续在典型集上进行探索，准确度上升缓慢。</li></ol><p>如下图所示：</p><p><img src="http://static01.imgkr.com/temp/1a1df50a72d54d1998ae2b266f3e3aed.jpg" alt=""></p><blockquote><p>图(a)表示阶段1，图(b)表示阶段2，图(c)表示阶段3。</p></blockquote><p>当达到阶段3时，估计的结果符合大数定律：</p><script type="math/tex; mode=display">\hat{f}^{\text{MCMC}}_N\sim \mathcal{N}(\mathbb{E}_{\pi}[f],\text{MCMC-SE})</script><p>其中蒙特卡洛误差为：</p><script type="math/tex; mode=display">\text{MCMC-SE}\equiv \sqrt{\frac{\text{Var}_{\pi}[f]}{\text{ESS}}}</script><p>其中ESS为有效样本量，定义为：</p><script type="math/tex; mode=display">\text{ESS} = \frac{N}{1+2\sum_{l=1}^\infty \rho_l}</script><p>其中$\rho_l$为之后$l$的自相关系数。</p><h4 id="病态情况"><a href="#病态情况" class="headerlink" title="病态情况"></a>病态情况</h4><p>当典型集内存在高曲率区域时，会导致此区域无法被探索，造成偏差。</p><p><img src="http://static01.imgkr.com/temp/ef84320549ab469690733e68a944729c.jpg" alt=""></p><blockquote><p>病态情况：其中绿色区域表示高曲率区域。存在三种情况：</p><ol><li>无法跨过此高曲率区域，仅在一侧进行采样。</li><li>在高曲率区域周围震荡。</li><li>可以跨过高区域区域，在整个典型集上进行采样。</li></ol></blockquote><h4 id="Metropolis-Hastings采样"><a href="#Metropolis-Hastings采样" class="headerlink" title="Metropolis-Hastings采样"></a>Metropolis-Hastings采样</h4><p>一个较为简单的MCMC方法为M-H采样(Metropolis-Hastings采样)，在局部利用建议分布对目标分布进行近似，其分为两个步骤：</p><ol><li>在提议分布$\mathbb{Q}(q^\prime\mid q)$进行采样</li><li>计算接受率<script type="math/tex">a(q^\prime\mid q) = \min\left(1,\frac{\mathbb{Q}(q\mid q^\prime)\pi(q^\prime)}{\mathbb{Q}(q^\prime\mid q)\pi(q)}\right)</script>，如果$a$大于生成的$0\sim1$之间的随机数，接受样本$q^\prime$，否则继续接受样本$q$。<br>但是M-H采样在高维情况下存在接受率过低的问题。</li></ol><h3 id="Hamiltonian-Monte-Carlo"><a href="#Hamiltonian-Monte-Carlo" class="headerlink" title="Hamiltonian Monte Carlo"></a>Hamiltonian Monte Carlo</h3><p>汉密尔顿蒙特卡洛(HMC)方法：我们可以利用典型集的形状的特征来进行采样。我们不再在典型集上随机移动，而是通过向量场的形式来指示移动的方向，使其高效地在典型集上移动。</p><p>我们将概率系统类比于物理系统，典型集类似于行星绕地球旋转地轨道。对于行星，我们需要添加动量来抵消重力使行星正常围绕地球运动；类比于概率空间，我们需要添加动量来抵消梯度使马尔可夫链在典型集上采样。</p><h4 id="相空间和汉密尔顿方程"><a href="#相空间和汉密尔顿方程" class="headerlink" title="相空间和汉密尔顿方程"></a>相空间和汉密尔顿方程</h4><p>我们需要引入动量参数来补充目标参数空间的每个维度：</p><script type="math/tex; mode=display">q_n \rightarrow (q_n,p_n)</script><p>这样将$D$维空间拓展为了$2D$维的空间，我们就将目标参数空间拓展为了相空间。相空间上的联合分布成为典型分布(canonical distribution)：</p><script type="math/tex; mode=display">\pi(q,p) = \pi(p\mid q)\pi(q)</script><p>这样我们对动量参数进行积分后很容易得到我们要采样的目标参数。</p><p>我们将典型分布写为不变的汉密尔顿函数的形式：</p><script type="math/tex; mode=display">\pi(q,p) = \exp^{-H(q,p)}</script><p>所以：</p><script type="math/tex; mode=display">\begin{aligned}H(q,p) &= -\log\pi(p\mid q) - \log\pi(q)\\&\equiv K(p,q) + V(q)\end{aligned}</script><p>其中$K(p,q)$被称为动能，$V(q)$被称为势能。</p><p>我们利用汉密尔顿方程来生成向量场：</p><script type="math/tex; mode=display">\begin{aligned}\frac{dq}{dt} &= + \frac{\partial H}{\partial p} = \frac{\partial K}{\partial p}\\\frac{dp}{dt} &= -\frac{\partial H}{\partial q} = -\frac{\partial K}{\partial q} - \frac{\partial V}{\partial q}\end{aligned}</script><p>所以汉密尔顿方程是不随时间发生改变的，因为：</p><script type="math/tex; mode=display">\begin{aligned}\frac{dH}{dt} &= \frac{\partial H}{\partial p}\frac{d p}{dt} + \frac{\partial H}{\partial q}\frac{d q}{dt}\\&= -\frac{\partial H}{\partial p}\frac{\partial H}{\partial q} + \frac{\partial H}{\partial q}\frac{\partial H}{\partial p}\\&=0\end{aligned}</script><h4 id="理想条件下的汉密尔顿转移"><a href="#理想条件下的汉密尔顿转移" class="headerlink" title="理想条件下的汉密尔顿转移"></a>理想条件下的汉密尔顿转移</h4><p>理想条件下的HMC可以分为3个步骤：</p><ol><li>从初始位置产生初始动量</li><li>以此类推产生轨迹</li><li>从相空间投影到参数空间</li></ol><h3 id="高效的HMC"><a href="#高效的HMC" class="headerlink" title="高效的HMC"></a>高效的HMC</h3><h4 id="相空间的几何形状"><a href="#相空间的几何形状" class="headerlink" title="相空间的几何形状"></a>相空间的几何形状</h4><p>汉密尔顿公式的性质使汉密尔顿方程的值始终保持不变。话句话说，每一个汉密尔顿轨迹都使一个能级：</p><script type="math/tex; mode=display">H^{-1}(E) = \{q,p\mid H(q,p)=E\}</script><p>如下图所示，相空间可以被分解维汉密尔顿能级。</p><p><img src="http://static01.imgkr.com/temp/028f6ae9a0074f3cb6047d241f6e3945.jpg" alt=""></p><p>所以我们的采样过程可以分解为两个步骤，一个是在相同的能级上进行采样，一个是在不同的能级上进行跃迁，如下图：</p><p><img src="http://static01.imgkr.com/temp/72b6558918b7415589144699fd37eb61.jpg" alt=""></p><blockquote><p>深红色表示在相同的能级上进行采样，浅红色的表示在不同能级上进行跃迁。</p></blockquote><h4 id="对动能的优化"><a href="#对动能的优化" class="headerlink" title="对动能的优化"></a>对动能的优化</h4><p>欧几里得-高斯动能：</p><script type="math/tex; mode=display">\begin{aligned}\Delta(q,q^\prime) &= (q-q^\prime)^\top\cdot M\cdot(q-q^\prime)\\\Delta(p,p^\prime) &= (p-p^\prime)^\top\cdot M^{-1}\cdot(p-p^\prime)\end{aligned}</script><p>我们一般定义条件分布为：</p><script type="math/tex; mode=display">\pi(p\mid q) = \mathcal{N}(p\mid 0,M)</script><p>这种特殊选择定义了欧几里得-高斯动能：</p><script type="math/tex; mode=display">K(q,p) = \frac{1}{2}P^\top \cdot M^{-1}\cdot p + \frac{1}{2}\log|M|+\text{const}</script><p>黎曼-高斯动能函数：与欧几里得-高斯动能函数不同之处为协方差与位置有关：</p><script type="math/tex; mode=display">\pi(p\mid q) = \mathcal{N}(p\mid 0,\Sigma(q))</script><p>定义了黎曼-高斯动能：</p><script type="math/tex; mode=display">K(q,p) = \frac{1}{2}p^\top\cdot\Sigma^{-1}(q)\cdot p+\frac{1}{2}\log|\Sigma(q)| + \text{const}</script><h4 id="对积分时间的优化"><a href="#对积分时间的优化" class="headerlink" title="对积分时间的优化"></a>对积分时间的优化</h4><p>这里的积分时间指的是在某个特定能级上的探索时间(步数)。随着积分时间的增加，时间期望会收敛到空间期望。</p><p><img src="http://static01.imgkr.com/temp/cca5d76d452f47f695f3a308dfe6602f.jpg" alt=""></p><blockquote><p>图(a)：时间期望与空间期望的差值的绝对值随着积分时间的变化，可以看到到积分时间到达一定的程度后，增加积分时间对结果产生的影响并不大；图(b)：有效样本数随着积分时间的变化，与图(a)变化类似；图(c)：有效样本数/积分时间随着积分时间的变化，先增加后减小，存在最大值。</p></blockquote><p>当目标概率密度为：</p><script type="math/tex; mode=display">\pi_\beta(q)\propto \exp(-|q|^\beta)</script><p>动能函数为欧几里得动能：</p><script type="math/tex; mode=display">\pi(p\mid q) = \mathcal{N}(0,1)</script><p>最优积分时间与包含轨迹的能级的能量成比例：</p><script type="math/tex; mode=display">T_{\text{optimal}}(q,p)\propto (H(q,p))^{\frac{2-\beta}{2\beta}}</script><h3 id="在实践中实现HMC"><a href="#在实践中实现HMC" class="headerlink" title="在实践中实现HMC"></a>在实践中实现HMC</h3><p>由于在绝大数情况下我们不能准确地求解哈密顿方程，必须采用数值求解的方法，但是数值求解的过程会累积误差，对我们的结果产生影响。</p><h4 id="Symplectic-Integrators"><a href="#Symplectic-Integrators" class="headerlink" title="Symplectic Integrators"></a>Symplectic Integrators</h4><p>Symplectic Integrators(辛积分器)是一个强大的积分器，它产生的数值轨迹不会偏离精确的能级，而是在其附近震荡，即使在很长的积分时间内也是如此。</p><script type="math/tex; mode=display">\begin{aligned}&q_{0} \leftarrow q, p_{0} \leftarrow p \\&\text {for } 0 \leq n<\llcorner T / \epsilon\lrcorner \text { do } \\&\quad p_{n+\frac{1}{2}}  \leftarrow p_{n}-\frac{\epsilon}{2} \frac{\partial V}{\partial q}\left(q_{n}\right) \\&\quad q_{n+1}  \leftarrow q_{n}+\epsilon p_{n+\frac{1}{2}} \\&\quad p_{n+1} \leftarrow p_{n+\frac{1}{2}}-\frac{\epsilon}{2} \frac{\partial V}{\partial q}\left(q_{n+1}\right)\\&\text {end for. }\end{aligned}</script><h4 id="纠正辛积分器"><a href="#纠正辛积分器" class="headerlink" title="纠正辛积分器"></a>纠正辛积分器</h4><p>我们在每个能级上运行$L$步，取最后一个样本$(q_L,p_L)$，之后进行能级跃迁。因为我们是使用数值的方法，因此在同一个能级上采样上可能不能保持能量不变。因此我们借用M-H采样的思想来对样本进行进行接受-拒绝，因为在同一个能级上采样当确定初始点时采到的样本是固定的，所以：</p><script type="math/tex; mode=display">\mathbb{Q}(q_0,p_0\mid q_L,p_L) = \mathbb{Q}(q_L,p_L\mid q_0,p_0)=1</script><p>其接受概率为：</p><script type="math/tex; mode=display">\begin{aligned}a\left(q_{L},p_{L} \mid q_{0}, p_{0}\right) &=\min \left(1, \frac{\mathbb{Q}\left(q_{0}, p_{0} \mid q_{L},p_{L}\right) \pi\left(q_{L},p_{L}\right)}{\mathbb{Q}\left(q_{L},p_{L} \mid q_{0}, p_{0}\right) \pi\left(q_{0}, p_{0}\right)}\right) \\&=\min \left(1, \frac{\pi\left(q_{L},p_{L}\right)}{\pi\left(q_{0}, p_{0}\right)}\right) \\&=\min \left(1, \frac{\exp \left(-H\left(q_{L},p_{L}\right)\right)}{\exp \left(-H\left(q_{0}, p_{0}\right)\right)}\right) \\&=\min \left(1, \exp \left(-H\left(q_{L},p_{L}\right)+H\left(q_{0}, p_{0}\right)\right)\right)\end{aligned}</script>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;A-Conceptual-Introduction-to-Hamiltonian-Monte-Carlo&quot;&gt;&lt;a href=&quot;#A-Conceptual-Introduction-to-Hamiltonian-Monte-Carlo&quot; class=&quot;headerlink&quot; title=&quot;A Conceptual Introduction to Hamiltonian Monte Carlo&quot;&gt;&lt;/a&gt;A Conceptual Introduction to Hamiltonian Monte Carlo&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;文章链接：&lt;a href=&quot;https://arxiv.org/abs/1701.02434&quot;&gt;https://arxiv.org/abs/1701.02434&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://static01.imgkr.com/temp/8a010064bcee4b0eac9e9c05caa3f1ee.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="文献阅读" scheme="https://www.hfcouc.work/categories/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="算法" scheme="https://www.hfcouc.work/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>只争朝夕，不负韶华</title>
    <link href="https://www.hfcouc.work/2021/07/13/index/"/>
    <id>https://www.hfcouc.work/2021/07/13/index/</id>
    <published>2021-07-13T12:13:25.471Z</published>
    <updated>2022-07-01T11:08:05.709Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><h1 align="center">    凡是过往皆为序章，所有将来皆可盼。</h1></p><p align="center">    <img src="https://raw.githubusercontent.com/HFC666/image/master/img/head.jpg" style="zoom: 100%;" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
